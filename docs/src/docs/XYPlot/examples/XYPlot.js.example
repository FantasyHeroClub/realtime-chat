const MultipleXYExample = (props) => {
  return <div>
    <XYPlot domain={{y: [-2, 2], x: [-2, 2]}} scaleType="linear" {...{width: 400, height: 400}}>
      <XAxis title="Phase" />
      <YAxis title="Intensity" />

      <RangeBarChart
        data={_.range(0, 2, .03)}
        getX={null}
        getY={d => (Math.sin(d*3) * .7) + 1.2}
        getYEnd={d => (Math.sin(d*3) * Math.cos(d*3) * .7) + 1.2}
        barThickness={2}
        barStyle={{fill: '#3690c0'}}
      />

      <LineChart
        data={_.range(-2, 0, .005)}
        getY={d => Math.pow(Math.abs(Math.sin(d*5)), Math.abs(Math.sin(d*.25))) * 1.8}
        lineStyle={{stroke: '#02818a', strokeWidth: 3}}
      />

      <ScatterPlot
        data={_.range(-2, 0, .05)}
        getY={d => Math.pow(2, (d + 2) * 1.8) * 0.1}
        pointSymbol={<rect width={5} height={5} fill="#3690c0" />}
      />

      <BarChart
        data={_.range(0, 2, .03)}
        getY={d => -Math.abs(Math.sin(d*4) * Math.cos(d*3))}
        barThickness={3}
        barStyle={{fill: '#67a9cf'}}
      />

      <MarkerLineChart
        data={_.range(0, 1.5, .1)}
        getY={d => Math.cos(d)}
        lineStyle={{stroke: '#ec7014', strokeWidth: 3}}
      />

      <ColorHeatmap
        data={_.flatten(_.range(-2, 0, .1).map(i => _.range(-2, 0, .1).map(j => [i, j])))}
        getValue={([i, j]) => Math.sin(i * j * 5)}
        getX={([i, j]) => i}
        getXEnd={([i, j]) => i + .1}
        getY={([i, j]) => j}
        getYEnd={([i, j]) => j + .1}
        colors={['#d0d1e6', '#016450']}
        interpolator={'lab'}
      />

      <AreaHeatmap
        data={_.flatten(_.range(0, 2, .1).map(i => _.range(-2, -1, .1).map(j => [i, j])))}
        getArea={([i, j]) => -Math.sin(i * j * 5)}
        getX={([i, j]) => i}
        getXEnd={([i, j]) => i + .1}
        getY={([i, j]) => j}
        getYEnd={([i, j]) => j + .1}
        rectStyle={{fill: '#016450'}}
      />
    </XYPlot>
  </div>;
};

ReactDOM.render(<MultipleXYExample />, mountNode);
