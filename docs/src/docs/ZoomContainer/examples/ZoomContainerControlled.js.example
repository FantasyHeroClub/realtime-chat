class ZoomControlledExample extends React.Component {
  state = {
    zoomTransform: {k: 1, x: 0, y: 0},
    zoomX: 0,
    zoomY: 0,
    zoomScale: 1
  };

  handleZoom = (nextZoomTransform) => {
    if(!nextZoomTransform) return;
    this.setState({
      zoomX: nextZoomTransform.x,
      zoomY: nextZoomTransform.y,
      zoomScale: nextZoomTransform.k
    });
  };
  handleClickZoomIn = () => {
    this.setState({zoomScale: this.state.zoomScale * 1.25});
  };
  handleClickZoomOut = () => {
    this.setState({zoomScale: this.state.zoomScale / 1.25});
  };

  render() {
    return <div>
      <ZoomContainer
        width={600}
        height={350}
        onZoom={this.handleZoom}
        controlled={true}
        zoomX={this.state.zoomX}
        zoomY={this.state.zoomY}
        zoomScale={this.state.zoomScale}
      >
        <XYPlot scaleType="linear" width={600} height={350}>
          <XAxis title="Phase" />
          <YAxis title="Intensity" />
          <LineChart
            data={_.range(100)}
            x={d => d}
            y={d => Math.sin(d*.1)}
          />
        </XYPlot>
      </ZoomContainer>
      <div>
        <button onClick={this.handleClickZoomIn}>[+] Zoom In</button>
        <button onClick={this.handleClickZoomOut}>[-] Zoom Out</button>
      </div>
    </div>
  }
}

ReactDOM.render(<ZoomControlledExample />, mountNode);
