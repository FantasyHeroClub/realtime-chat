{"version":3,"sources":["../src/YAxis.js"],"names":["YAxis","nextProps","nextState","props","width","height","position","tickLength","titleDistance","labelDistance","showTitle","showLabels","showTicks","showGrid","spacingTop","spacingBottom","spacingLeft","spacingRight","ticksProps","gridProps","labelsProps","titleProps","distance","labelsMargin","getMargin","upperFirst","axisLineX","yScale","defaults","defaultProps","yTickDomain","margins","push","title","Component","propTypes","func","number","string","placement","nice","bool","ticks","array","tickCount","titleAlign","titleRotate","titleStyle","object","labelClassName","labelStyle","labelFormat","oneOfType","labelFormats","labels","tickClassName","tickStyle","gridLineClassName","gridLineStyle","onMouseEnterLabel","onMouseMoveLabel","onMouseLeaveLabel"],"mappings":"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","file":"YAxis.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport {getTickDomain} from './utils/Scale';\nimport {sumMargins} from './utils/Margin';\nimport {getAxisChildProps} from './utils/Axis'\nimport xyPropsEqual from './utils/xyPropsEqual';\n\n\nimport YTicks from './YTicks';\nimport YGrid from './YGrid';\nimport YAxisLabels from './YAxisLabels';\nimport YAxisTitle from './YAxisTitle';\n\nexport default class YAxis extends React.Component {\n  static propTypes = {\n    yScale: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    position: PropTypes.string,\n    placement: PropTypes.string,\n    nice: PropTypes.bool,\n    ticks: PropTypes.array,\n    tickCount: PropTypes.number,\n    spacingTop: PropTypes.number,\n    spacingBottom: PropTypes.number,\n    spacingLeft: PropTypes.number,\n    spacingRight: PropTypes.number,\n\n    showTitle: PropTypes.bool,\n    showLabels: PropTypes.bool,\n    showTicks: PropTypes.bool,\n    showGrid: PropTypes.bool,\n\n    title: PropTypes.string,\n    titleDistance: PropTypes.number,\n    titleAlign: PropTypes.string,\n    titleRotate: PropTypes.bool,\n    titleStyle: PropTypes.object,\n\n    labelDistance: PropTypes.number,\n    labelClassName: PropTypes.string,\n    labelStyle: PropTypes.object,\n    labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    labelFormats: PropTypes.array,\n    labels: PropTypes.array,\n\n    tickLength: PropTypes.number,\n    tickClassName: PropTypes.string,\n    tickStyle: PropTypes.object,\n\n    gridLineClassName: PropTypes.string,\n    gridLineStyle: PropTypes.object,\n\n    onMouseEnterLabel: PropTypes.func,\n    onMouseMoveLabel: PropTypes.func,\n    onMouseLeaveLabel: PropTypes.func\n  };\n\n  static defaultProps = {\n    width: 400,\n    height: 250,\n    position: 'left',\n    nice: true,\n    showTitle: true,\n    showLabels: true,\n    showTicks: true,\n    showGrid: true,\n    tickLength: 5,\n    labelDistance: 3,\n    titleDistance: 5,\n    spacingTop: 0,\n    spacingBottom: 0,\n    spacingLeft: 0,\n    spacingRight: 0\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !xyPropsEqual(this.props, nextProps);\n  }\n\n  static getTickDomain(props) {\n    if(!props.yScale) return;\n    props = _.defaults({}, props, YAxis.defaultProps);\n    return {yTickDomain: getTickDomain(props.yScale, props)};\n  }\n\n  static getMargin(props) {\n    // todo figure out margin if labels change after margin?\n    const {ticksProps, labelsProps, titleProps} = getAxisChildProps(props);\n    let margins = [];\n\n    if(props.showTicks)\n      margins.push(YTicks.getMargin(ticksProps));\n\n    if(props.showTitle && props.title)\n      margins.push(YAxisTitle.getMargin(titleProps));\n\n    if(props.showLabels)\n      margins.push(YAxisLabels.getMargin(labelsProps));\n\n    return sumMargins(margins, 'margin');\n  }\n\n  render() {\n    const {\n      width, height, position, tickLength, titleDistance, labelDistance,\n      showTitle, showLabels, showTicks, showGrid, spacingTop, spacingBottom, spacingLeft, spacingRight,\n    } = this.props;\n\n    const {ticksProps, gridProps, labelsProps, titleProps} = getAxisChildProps(this.props);\n\n    labelsProps.distance = labelDistance + (showTicks ? tickLength : 0);\n\n    if(showTitle && showLabels) {\n      // todo optimize so we don't generate labels twice\n      const labelsMargin = YAxisLabels.getMargin(labelsProps);\n      titleProps.distance = titleDistance + labelsMargin[`margin${_.upperFirst(position)}`];\n    } else if(showTitle && showTicks) {\n      titleProps.distance = titleDistance + tickLength;\n    }\n\n    const axisLineX = (position === 'left') ? -spacingLeft : width + spacingRight;\n\n    return <g className=\"chart-axis chart-axis-y\">\n      {showGrid ? <YGrid {...gridProps} /> : null}\n\n      {showTicks ? <YTicks {...ticksProps}/> : null}\n\n      {showLabels ? <YAxisLabels {...labelsProps} /> : null}\n\n      {showTitle ? <YAxisTitle {...titleProps} /> : null}\n\n      <line\n        className=\"chart-axis-line chart-axis-line-y\"\n        x1={axisLineX} x2={axisLineX}\n        y1={-spacingTop} y2={height + spacingBottom}\n      />\n    </g>;\n  }\n}\n"]}