{"version":3,"sources":["../src/XGrid.js"],"names":["XGrid","props","height","xScale","tickCount","lineClassName","lineStyle","spacingTop","spacingBottom","spacingLeft","spacingRight","ticks","className","map","tick","i","value","style","key","defaults","defaultProps","xTickDomain","Component","propTypes","width","number","func","nice","bool","array","string","object"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;;;;;;;IAGqBA,K;;;;;;;;;;;6BA0BV;AAAA,mBAC6G,KAAKC,KADlH;AAAA,UACAC,MADA,UACAA,MADA;AAAA,UACQC,MADR,UACQA,MADR;AAAA,UACgBC,SADhB,UACgBA,SADhB;AAAA,UAC2BC,aAD3B,UAC2BA,aAD3B;AAAA,UAC0CC,SAD1C,UAC0CA,SAD1C;AAAA,UACqDC,UADrD,UACqDA,UADrD;AAAA,UACiEC,aADjE,UACiEA,aADjE;AAAA,UACgFC,WADhF,UACgFA,WADhF;AAAA,UAC6FC,YAD7F,UAC6FA,YAD7F;;AAEP,UAAMC,QAAQ,KAAKV,KAAL,CAAWU,KAAX,IAAoB,0BAAcR,MAAd,EAAsB,IAAtB,EAA4BC,SAA5B,CAAlC;AACA,UAAMQ,oDAAiDP,iBAAiB,EAAlE,CAAN;;AAEA,aAAO;AAAA;AAAA,UAAG,WAAU,cAAb;AACJM,cAAME,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtB,iBAAO,+CAAW;AAChBb,0BADgB,EACRC,cADQ,EACAS,oBADA;AAEhBL,kCAFgB,EAEJC,4BAFI,EAEWC,wBAFX,EAEwBC,0BAFxB;AAGhBM,mBAAOF,IAHS;AAIhBG,mBAAOX,SAJS;AAKhBY,kCAAoBH;AALJ,WAAX,CAAP;AAOD,SARA;AADI,OAAP;AAWD;;;kCAtBoBd,K,EAAO;AAC1B,UAAG,CAACA,MAAME,MAAV,EAAkB;AAClBF,cAAQ,iBAAEkB,QAAF,CAAW,EAAX,EAAelB,KAAf,EAAsBD,MAAMoB,YAA5B,CAAR;AACA,aAAO,EAACC,aAAa,0BAAcpB,MAAME,MAApB,EAA4BF,KAA5B,CAAd,EAAP;AACD;;;;EAxBgC,gBAAMqB,S;;AAApBtB,K,CACZuB,S,GAAY;AACjBC,SAAO,oBAAUC,MADA;AAEjBvB,UAAQ,oBAAUuB,MAFD;AAGjBtB,UAAQ,oBAAUuB,IAHD;AAIjBnB,cAAY,oBAAUkB,MAJL;AAKjBjB,iBAAe,oBAAUiB,MALR;AAMjBhB,eAAa,oBAAUgB,MANN;AAOjBf,gBAAc,oBAAUe,MAPP;AAQjBE,QAAM,oBAAUC,IARC;AASjBjB,SAAO,oBAAUkB,KATA;AAUjBzB,aAAW,oBAAUqB,MAVJ;AAWjBpB,iBAAe,oBAAUyB,MAXR;AAYjBxB,aAAW,oBAAUyB;AAZJ,C;AADA/B,K,CAeZoB,Y,GAAe;AACpBO,QAAM,IADc;AAEpBrB,aAAW;AAFS,C;kBAfHN,K","file":"XGrid.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport {getScaleTicks, getTickDomain} from './utils/Scale';\nimport XLine from './XLine';\n\n\nexport default class XGrid extends React.Component {\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    xScale: PropTypes.func,\n    spacingTop: PropTypes.number,\n    spacingBottom: PropTypes.number,\n    spacingLeft: PropTypes.number,\n    spacingRight: PropTypes.number,\n    nice: PropTypes.bool,\n    ticks: PropTypes.array,\n    tickCount: PropTypes.number,\n    lineClassName: PropTypes.string,\n    lineStyle: PropTypes.object\n  };\n  static defaultProps = {\n    nice: true,\n    lineStyle: {}\n  };\n\n  static getTickDomain(props) {\n    if(!props.xScale) return;\n    props = _.defaults({}, props, XGrid.defaultProps);\n    return {xTickDomain: getTickDomain(props.xScale, props)};\n  }\n\n  render() {\n    const {height, xScale, tickCount, lineClassName, lineStyle, spacingTop, spacingBottom, spacingLeft, spacingRight} = this.props;\n    const ticks = this.props.ticks || getScaleTicks(xScale, null, tickCount);\n    const className = `chart-grid-line chart-grid-line-x ${lineClassName || ''}`;\n\n    return <g className=\"chart-grid-x\">\n      {ticks.map((tick, i) => {\n        return <XLine {...{\n          height, xScale, className,\n          spacingTop, spacingBottom, spacingLeft, spacingRight,\n          value: tick,\n          style: lineStyle,\n          key: `grid-x-line-${i}`\n        }} />;\n      })}\n    </g>;\n  }\n}\n"]}