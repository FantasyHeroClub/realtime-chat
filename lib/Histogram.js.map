{"version":3,"sources":["../src/Histogram.js"],"names":["CustomPropTypes","Histogram","state","histogramData","nextProps","nextState","shouldUpdate","props","xDomain","value","data","chartHistogram","domain","thresholds","setState","name","scale","axisType","scaleWidth","scaleHeight","plotWidth","plotHeight","getX0","getX1","getLength","xScaleType","yScaleType","yDomain","Component","propTypes","array","isRequired","valueOrAccessor","object","d","x0","x1","length"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;IAAYA,e;;AACZ;;AACA;;;;AAEA;;;;;;;;;;;;;;AAEA;IACqBC,S;;;;;;;;;;;;;;4LAWnBC,K,GAAQ;AACNC,qBAAe;AADT,K;;;;;0CAoBcC,S,EAAWC,S,EAAW;AAC1C,UAAMC,eAAe,CAAC,4BAAa,KAAKC,KAAlB,EAAyBH,SAAzB,EAAoC,EAApC,CAAtB;AACA,aAAOE,YAAP;AACD;;;yCAEoB;AAAA,mBACY,KAAKC,KADjB;AAAA,UACZC,OADY,UACZA,OADY;AAAA,UACHC,KADG,UACHA,KADG;AAAA,UACIC,IADJ,UACIA,IADJ;;AAEnB,UAAMC,iBAAiB,oBACpBC,MADoB,CACbJ,OADa;AAErB;AAFqB,OAGpBC,KAHoB,CAGd,yBAAcA,KAAd,CAHc,EAIpBI,UAJoB,CAIT,EAJS,CAAvB;;AAMA,UAAMV,gBAAgBQ,eAAeD,IAAf,CAAtB;;AAEA,WAAKI,QAAL,CAAc,EAACX,4BAAD,EAAd;AACD;;;6BAEQ;AACP,UAAG,CAAC,KAAKD,KAAL,CAAWC,aAAf,EAA8B,OAAO,wCAAP;AADvB,oBAEyE,KAAKI,KAF9E;AAAA,UAEAQ,IAFA,WAEAA,IAFA;AAAA,UAEMC,KAFN,WAEMA,KAFN;AAAA,UAEaC,QAFb,WAEaA,QAFb;AAAA,UAEuBC,UAFvB,WAEuBA,UAFvB;AAAA,UAEmCC,WAFnC,WAEmCA,WAFnC;AAAA,UAEgDC,SAFhD,WAEgDA,SAFhD;AAAA,UAE2DC,UAF3D,WAE2DA,UAF3D;;;AAIP,aAAO,mEACD,KAAKd,KADJ;AAEL,cAAM,KAAKL,KAAL,CAAWC,aAFZ;AAGL,WAAGmB,KAHE;AAIL,cAAMC,KAJD;AAKL,WAAGC;AALE,SAAP;AAOD;;;mCA7CqB;AACpB,aAAO;AACLC,oBAAY,QADP;AAELC,oBAAY;AAFP,OAAP;AAID;;;8BACgBnB,K,EAAO;AAAA,UACfG,IADe,GACAH,KADA,CACfG,IADe;AAAA,UACTD,KADS,GACAF,KADA,CACTE,KADS;AAEtB;;AACA,aAAO;AACL;AACAD,iBAAS,0BAAeE,IAAf,EAAqB,yBAAcD,KAAd,CAArB,CAFJ;AAGLkB,iBAAS,CAAC,CAAD,EAAG,GAAH;AAHJ,OAAP;AAKD;;;;EA7BoC,gBAAMC,S;;AAAxB3B,S,CACZ4B,S,GAAY;AACjB;;;AAGAnB,QAAM,oBAAUoB,KAAV,CAAgBC,UAJL;AAKjBtB,SAAOT,gBAAgBgC,eALN;AAMjBf,YAAU,oBAAUgB,MANH;AAOjBjB,SAAO,oBAAUiB;AAPA,C;kBADAhC,S;;;AA+DrB,SAASqB,KAAT,CAAeY,CAAf,EAAkB;AAAE,SAAOA,EAAEC,EAAT;AAAc;AAClC,SAASZ,KAAT,CAAeW,CAAf,EAAkB;AAAE,SAAOA,EAAEE,EAAT;AAAc;AAClC,SAASZ,SAAT,CAAmBU,CAAnB,EAAsB;AAAE,SAAOA,EAAEG,MAAT;AAAkB","file":"Histogram.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {histogram} from 'd3';\nimport PropTypes from 'prop-types';\n\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport {makeAccessor2, domainFromRangeData, domainFromData} from './utils/Data';\nimport xyPropsEqual from './utils/xyPropsEqual';\n\nimport AreaBarChart from './AreaBarChart';\n\n// todo make histogram work horizontally *or* vertically\nexport default class Histogram extends React.Component {\n  static propTypes = {\n    /**\n     * the array of data objects\n     */\n    data: PropTypes.array.isRequired,\n    value: CustomPropTypes.valueOrAccessor,\n    axisType: PropTypes.object,\n    scale: PropTypes.object\n  };\n\n  state = {\n    histogramData: null\n  };\n\n  static getScaleType() {\n    return {\n      xScaleType: 'linear',\n      yScaleType: 'linear'\n    }\n  }\n  static getDomain(props) {\n    const {data, value} = props;\n    // todo implement for real\n    return {\n      // x: null,\n      xDomain: domainFromData(data, makeAccessor2(value)),\n      yDomain: [0,200]\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, []);\n    return shouldUpdate;\n  }\n\n  componentWillMount() {\n    const {xDomain, value, data} = this.props;\n    const chartHistogram = histogram()\n      .domain(xDomain)\n      // todo - get this working with arbitrary getValue accessor - seems to be broken -DD\n      .value(makeAccessor2(value))\n      .thresholds(30);\n\n    const histogramData = chartHistogram(data);\n\n    this.setState({histogramData});\n  }\n\n  render() {\n    if(!this.state.histogramData) return <g></g>;\n    const {name, scale, axisType, scaleWidth, scaleHeight, plotWidth, plotHeight} = this.props;\n\n    return <AreaBarChart\n      {...this.props}\n      data={this.state.histogramData}\n      x={getX0}\n      xEnd={getX1}\n      y={getLength}\n    />;\n  }\n}\n\nfunction getX0(d) { return d.x0; }\nfunction getX1(d) { return d.x1; }\nfunction getLength(d) { return d.length; }"]}