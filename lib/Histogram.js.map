{"version":3,"sources":["../src/Histogram.js"],"names":["CustomPropTypes","Histogram","state","histogramData","props","domain","getValue","data","chartHistogram","x","value","thresholds","setState","name","scale","axisType","scaleWidth","scaleHeight","plotWidth","plotHeight","d","x0","x1","length","y","Component","propTypes","array","isRequired","getter","object"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;IAAYA,e;;AACZ;;AACA;;;;;;;;;;;;;;AAEA;IACqBC,S;;;;;;;;;;;;;;4LAWnBC,K,GAAQ;AACNC,qBAAe;AADT,K;;;;;yCAYa;AAAA,mBACc,KAAKC,KADnB;AAAA,UACZC,MADY,UACZA,MADY;AAAA,UACJC,QADI,UACJA,QADI;AAAA,UACMC,IADN,UACMA,IADN;;AAEnB,UAAMC,iBAAiB,oBACpBH,MADoB,CACbA,OAAOI,CADM;AAErB;AAFqB,OAGpBC,KAHoB,CAGd,wBAAaJ,QAAb,CAHc,EAIpBK,UAJoB,CAIT,EAJS,CAAvB;;AAMA,UAAMR,gBAAgBK,eAAeD,IAAf,CAAtB;;AAEA,WAAKK,QAAL,CAAc,EAACT,4BAAD,EAAd;AACD;;;6BAEQ;AACP,UAAG,CAAC,KAAKD,KAAL,CAAWC,aAAf,EAA8B,OAAO,wCAAP;AADvB,oBAEyE,KAAKC,KAF9E;AAAA,UAEAS,IAFA,WAEAA,IAFA;AAAA,UAEMC,KAFN,WAEMA,KAFN;AAAA,UAEaC,QAFb,WAEaA,QAFb;AAAA,UAEuBC,UAFvB,WAEuBA,UAFvB;AAAA,UAEmCC,WAFnC,WAEmCA,WAFnC;AAAA,UAEgDC,SAFhD,WAEgDA,SAFhD;AAAA,UAE2DC,UAF3D,WAE2DA,UAF3D;;;AAIP,aAAO;AACL,cAAM,KAAKjB,KAAL,CAAWC,aADZ;AAEL,cAAM;AAAA,iBAAKiB,EAAEC,EAAP;AAAA,SAFD;AAGL,iBAAS;AAAA,iBAAKD,EAAEE,EAAP;AAAA,SAHJ;AAIL,cAAM;AAAA,iBAAKF,EAAEG,MAAP;AAAA;AAJD,SAKD,EAACV,UAAD,EAAOC,YAAP,EAAcC,kBAAd,EAAwBC,sBAAxB,EAAoCC,wBAApC,EAAiDC,oBAAjD,EAA4DC,sBAA5D,EALC,EAAP;AAOD;;;gCAhCkB;AACjB;AACA,aAAO;AACLV,WAAG,IADE;AAELe,WAAG,CAAC,CAAD,EAAG,GAAH;AAFE,OAAP;AAID;;;;EArBoC,gBAAMC,S;;AAAxBxB,S,CACZyB,S,GAAY;AACjB;;;AAGAnB,QAAM,oBAAUoB,KAAV,CAAgBC,UAJL;AAKjBtB,YAAUN,gBAAgB6B,MALT;AAMjBd,YAAU,oBAAUe,MANH;AAOjBhB,SAAO,oBAAUgB;AAPA,C;kBADA7B,S","file":"Histogram.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {histogram} from 'd3';\nimport PropTypes from 'prop-types';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport {makeAccessor, domainFromRangeData} from './utils/Data';\nimport AreaBarChart from './AreaBarChart';\n\n// todo make histogram work horizontally *or* vertically\nexport default class Histogram extends React.Component {\n  static propTypes = {\n    /**\n     * the array of data objects\n     */\n    data: PropTypes.array.isRequired,\n    getValue: CustomPropTypes.getter,\n    axisType: PropTypes.object,\n    scale: PropTypes.object\n  };\n\n  state = {\n    histogramData: null\n  };\n\n  static getDomain() {\n    // todo implement for real\n    return {\n      x: null,\n      y: [0,200]\n    }\n  }\n\n  componentWillMount() {\n    const {domain, getValue, data} = this.props;\n    const chartHistogram = histogram()\n      .domain(domain.x)\n      // todo - get this working with arbitrary getValue accessor - seems to be broken -DD\n      .value(makeAccessor(getValue))\n      .thresholds(30);\n\n    const histogramData = chartHistogram(data);\n\n    this.setState({histogramData});\n  }\n\n  render() {\n    if(!this.state.histogramData) return <g></g>;\n    const {name, scale, axisType, scaleWidth, scaleHeight, plotWidth, plotHeight} = this.props;\n\n    return <AreaBarChart\n      data={this.state.histogramData}\n      getX={d => d.x0}\n      getXEnd={d => d.x1}\n      getY={d => d.length}\n      {...{name, scale, axisType, scaleWidth, scaleHeight, plotWidth, plotHeight}}\n    />;\n  }\n}\n"]}