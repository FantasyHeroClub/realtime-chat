{"version":3,"sources":["../src/YAxisTitle.js"],"names":["YAxisTitle","props","height","width","distance","position","alignment","style","spacingLeft","spacingRight","title","children","placement","rotate","posX","translateX","translateY","textAnchor","dy","defaults","defaultProps","zeroMargin","marginTop","marginBottom","marginLeft","marginRight","measured","assign","text","marginValue","Math","ceil","value","Component","propTypes","number","oneOf","bool","object","undefined","fontFamily","fontSize","fontWeight","lineHeight"],"mappings":"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","file":"YAxisTitle.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport measureText from 'measure-text';\nimport PropTypes from 'prop-types';\n\nexport default class YAxisTitle extends React.Component {\n  static propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    distance: PropTypes.number,\n    position: PropTypes.oneOf(['left', 'right']),\n    alignment: PropTypes.oneOf(['top', 'middle', 'bottom']),\n    placement: PropTypes.oneOf(['before', 'after']),\n    rotate: PropTypes.bool,\n    style: PropTypes.object,\n    spacingLeft: PropTypes.number,\n    spacingRight: PropTypes.number,\n  };\n  static defaultProps = {\n    height: 250,\n    width: 400,\n    distance: 5,\n    position: 'left',\n    alignment: 'middle',\n    placement: undefined,\n    rotate: true,\n    style: {\n      fontFamily: \"Helvetica, sans-serif\",\n      fontSize: '24px',\n      fontWeight: 'bold',\n      lineHeight: 1\n    },\n    spacingLeft: 0,\n    spacingRight: 0\n  };\n\n  static getMargin(props) {\n    props = _.defaults({}, props, YAxisTitle.defaultProps);\n    const {distance, position, rotate} = props;\n    const placement = props.placement || ((position === 'left') ? 'before' : 'after');\n    const zeroMargin = {marginTop: 0, marginBottom: 0, marginLeft: 0, marginRight: 0};\n\n    if((position === 'left' && placement === 'after') || (position === 'right' && placement === 'before'))\n      return zeroMargin;\n\n    const title = props.title || props.children;\n    const style = _.defaults(props.style, YAxisTitle.defaultProps.style);\n    const measured = measureText(_.assign({text: title}, style));\n\n    const marginValue = distance +\n      Math.ceil(rotate ?\n        measured.height.value :\n        measured.width.value\n      );\n\n    return (position === 'left') ?\n      {...zeroMargin, marginLeft: marginValue} :\n      {...zeroMargin, marginRight: marginValue};\n  }\n\n  render() {\n    const {height, width, distance, position, alignment, style, spacingLeft, spacingRight} = this.props;\n    const title = this.props.title || this.props.children;\n    const placement = this.props.placement || ((position === 'left') ? 'before' : 'after');\n\n    const rotate = this.props.rotate ? -90 : 0;\n    const posX = (position === 'right') ? width + spacingRight : -spacingLeft;\n    const translateX = posX +\n      ((placement === 'before') ? -distance : distance);\n    const translateY =\n      (alignment === 'middle') ? (height / 2) :\n      (alignment === 'bottom') ? (height) :\n      0;\n    const textAnchor =\n      (rotate && alignment === 'top') ? 'end' :\n      (rotate && alignment === 'middle') ? 'middle' :\n      (rotate && alignment === 'bottom') ? 'start' :\n      (placement === 'before') ? 'end' :\n      'start';\n    const dy =\n      (rotate && placement == 'before') ? '-0.2em' :\n      (rotate) ? '0.8em' :\n      (alignment === 'top') ? '0.8em' :\n      (alignment === 'middle') ? '0.3em' :\n      null;\n\n    return <g transform={`translate(${translateX},${translateY})`}>\n      <text style={{...style, textAnchor}} transform={`rotate(${rotate})`} dy={dy}>\n        {title}\n      </text>\n    </g>;\n  }\n}\n"]}