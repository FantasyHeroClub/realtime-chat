{"version":3,"sources":["../src/YAxisTitle.js"],"names":["YAxisTitle","props","height","width","distance","position","alignment","style","spacing","title","children","placement","rotate","posX","right","left","translateX","translateY","textAnchor","dy","defaults","defaultProps","zeroMargin","top","bottom","measured","assign","text","marginValue","Math","ceil","value","Component","propTypes","number","oneOf","bool","object","undefined","fontFamily","fontSize","fontWeight","lineHeight"],"mappings":"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","file":"YAxisTitle.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport measureText from 'measure-text';\nimport PropTypes from 'prop-types';\n\nexport default class YAxisTitle extends React.Component {\n  static propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    distance: PropTypes.number,\n    position: PropTypes.oneOf(['left', 'right']),\n    alignment: PropTypes.oneOf(['top', 'middle', 'bottom']),\n    placement: PropTypes.oneOf(['before', 'after']),\n    rotate: PropTypes.bool,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    height: 250,\n    width: 400,\n    distance: 5,\n    position: 'left',\n    alignment: 'middle',\n    placement: undefined,\n    rotate: true,\n    style: {\n      fontFamily: \"Helvetica, sans-serif\",\n      fontSize: '24px',\n      fontWeight: 'bold',\n      lineHeight: 1\n    },\n    spacing: {top: 0, bottom: 0, left: 0, right: 0}\n  };\n\n  static getMargin(props) {\n    props = _.defaults({}, props, YAxisTitle.defaultProps);\n    const {distance, position, rotate} = props;\n    const placement = props.placement || ((position === 'left') ? 'before' : 'after');\n    const zeroMargin = {top: 0, bottom: 0, left: 0, right: 0};\n\n    if((position === 'left' && placement === 'after') || (position == 'right' && placement === 'before'))\n      return zeroMargin;\n\n    const title = props.title || props.children;\n    const style = _.defaults(props.style, YAxisTitle.defaultProps.style);\n    const measured = measureText(_.assign({text: title}, style));\n\n    const marginValue = distance +\n      Math.ceil(rotate ?\n        measured.height.value :\n        measured.width.value\n      );\n\n    return (position === 'left') ?\n    {...zeroMargin, left: marginValue} :\n    {...zeroMargin, right: marginValue};\n  }\n\n  render() {\n    const {height, width, distance, position, alignment, style, spacing} = this.props;\n    const title = this.props.title || this.props.children;\n    const placement = this.props.placement || ((position === 'left') ? 'before' : 'after');\n\n    const rotate = this.props.rotate ? -90 : 0;\n    const posX = (position === 'right') ? width + spacing.right : -spacing.left;\n    const translateX = posX +\n      ((placement === 'before') ? -distance : distance);\n    const translateY =\n      (alignment === 'middle') ? (height / 2) :\n      (alignment === 'bottom') ? (height) :\n      0;\n    const textAnchor =\n      (rotate && alignment === 'top') ? 'end' :\n      (rotate && alignment === 'middle') ? 'middle' :\n      (rotate && alignment === 'bottom') ? 'start' :\n      (placement === 'before') ? 'end' :\n      'start';\n    const dy =\n      (rotate && placement == 'before') ? '-0.2em' :\n      (rotate) ? '0.8em' :\n      (alignment === 'top') ? '0.8em' :\n      (alignment === 'middle') ? '0.3em' :\n      null;\n\n    return <g transform={`translate(${translateX},${translateY})`}>\n      <text style={{...style, textAnchor}} transform={`rotate(${rotate})`} dy={dy}>\n        {title}\n      </text>\n    </g>;\n  }\n}\n"]}