{"version":3,"sources":["../src/MarkerLineChart.js"],"names":["CustomPropTypes","getTickType","props","getXEnd","getYEnd","horizontal","isUndefined","console","warn","MarkerLineChart","onMouseEnterLine","e","d","onMouseMoveLine","onMouseLeaveLine","renderRangeValueLine","i","map","callback","eventName","isFunction","partial","onMouseEnter","onMouseMove","onMouseLeave","getX","getY","scale","xVal","x","yVal","y","xEndVal","yEndVal","x1","y1","x2","y2","key","every","isFinite","renderValueValueLine","lineLength","nextProps","nextState","shouldUpdate","tickType","data","top","right","bottom","left","domain","dataDomain","P","k","first","last","sortBy","domainHead","domainTail","dataDomainHead","dataDomainTail","clamp","spacingTail","spacingHead","scaleType","rangeAxis","rangeStartAccessor","rangeEndAccessor","rangeDataType","Component","propTypes","array","isRequired","getter","bool","number","object","func","defaultProps"],"mappings":"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","file":"MarkerLineChart.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport {methodIfFuncProp} from './util.js';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport {dataTypeFromScaleType} from './utils/Scale';\nimport {makeAccessor, domainFromRangeData, getDataDomainByAxis} from './utils/Data';\nimport xyPropsEqual from './utils/xyPropsEqual';\n\n/**\n * MarkerLine is similar to a bar chart,\n * except that it just draws a line at the data value, rather than a full bar.\n * If the independent variable is a range, the length of the line will represent that range,\n * otherwise all lines will be the same length.\n * The dependent variable must be a single value, not a range.\n */\n\nfunction getTickType(props) {\n  const {getXEnd, getYEnd, horizontal} = props;\n  // warn if a range is passed for the dependent variable, which is expected to be a value\n  if((!horizontal && !_.isUndefined(getYEnd)) || (horizontal && !_.isUndefined(getXEnd)))\n    console.warn(\"Warning: MarkerLineChart can only show the independent variable as a range, not the dependent variable.\");\n\n  if((!horizontal && !_.isUndefined(getXEnd)) || (horizontal && !_.isUndefined(getYEnd)))\n    return \"RangeValue\";\n\n  return \"ValueValue\";\n}\n\n\nexport default class MarkerLineChart extends React.Component {\n  static propTypes = {\n    // the array of data objects\n    data: PropTypes.array.isRequired,\n    // accessor for X & Y coordinates\n    getX: CustomPropTypes.getter,\n    getY: CustomPropTypes.getter,\n    getXEnd: CustomPropTypes.getter,\n    getYEnd: CustomPropTypes.getter,\n\n    horizontal: PropTypes.bool,\n    lineLength: PropTypes.number,\n\n    // x & y scale types\n    scaleType: PropTypes.object,\n    scale: PropTypes.object,\n\n    onMouseEnterLine: PropTypes.func,\n    onMouseMoveLine: PropTypes.func,\n    onMouseLeaveLine: PropTypes.func\n  };\n  static defaultProps = {\n    horizontal: false,\n    lineLength: 10\n  };\n\n  // todo reimplement padding/spacing\n  /*\n  static getOptions(props) {\n    const {data, getX, getXEnd, getY, getYEnd, scaleType, orientation, lineLength} = props;\n    const tickType = getTickType(props);\n    const isVertical = (orientation === 'vertical');\n    const accessors = {x: makeAccessor(getX), y: makeAccessor(getY)};\n    const endAccessors = {x: makeAccessor(getXEnd), y: makeAccessor(getYEnd)};\n\n    let options = {domain: {}, spacing: {}};\n\n    if(tickType === 'RangeValue') { // set range domain for range type\n      let rangeAxis = isVertical ? 'x' : 'y';\n      options.domain[rangeAxis] =\n        rangeAxisDomain(data, accessors[rangeAxis], endAccessors[rangeAxis], scaleType[rangeAxis]);\n    } else {\n      // the value, and therefore the center of the marker line, may fall exactly on the axis min or max,\n      // therefore marker lines need (0.5*lineLength) spacing so they don't hang over the edge of the chart\n      const halfLine = Math.ceil(0.5 * lineLength);\n      options.spacing = isVertical ? {left: halfLine, right: halfLine} : {top: halfLine, bottom: halfLine};\n    }\n\n    return options;\n  }\n  */\n\n  static getSpacing(props) {\n    const tickType = getTickType(props);\n    if(tickType === 'RangeValue') return {top: 0, right: 0, bottom: 0, left: 0}; //no spacing for rangeValue marker charts since line start and end are set explicitly\n    const {lineLength, horizontal, scale, data, domain} = props;\n    const dataDomain = getDataDomainByAxis(props);\n    const P = lineLength / 2; //padding\n    const k = horizontal ? 'y' : 'x';\n    //find the edges of the tick domain, and map them through the scale function\n    const [domainHead, domainTail] = _([_.first(domain[k]), _.last(domain[k])]).map(scale[k]).sortBy(); //sort the pixel values return by the domain extents\n    //find the edges of the data domain, and map them through the scale function\n    const [dataDomainHead, dataDomainTail] = _([_.first(dataDomain[k]), _.last(dataDomain[k])]).map(scale[k]).sortBy(); //sort the pixel values return by the domain extents\n    //find the neccessary spacing (based on bar width) to push the bars completely inside the tick domain\n    const [spacingTail, spacingHead] = [_.clamp(P - (domainTail - dataDomainTail), 0, P), _.clamp(P - (dataDomainHead - domainHead), 0, P)];\n    if(horizontal){\n      return {top: spacingHead, right: 0, bottom: spacingTail, left: 0}\n    } else {\n      return {top: 0, right: spacingTail, bottom: 0, left: spacingHead}\n    }\n  }\n\n  static getDomain(props) {\n    if(getTickType(props) === 'RangeValue') { // set range domain for range type\n      const {data, getX, getXEnd, getY, getYEnd, scaleType, horizontal} = props;\n\n      // only have to specify range axis domain, other axis uses default domainFromData\n      // in this chart type, the range axis, if there is one, is always the *independent* variable\n      const rangeAxis = horizontal ? 'y' : 'x';\n      const rangeStartAccessor = horizontal ? makeAccessor(getY) : makeAccessor(getX);\n      const rangeEndAccessor = horizontal ? makeAccessor(getYEnd) : makeAccessor(getXEnd);\n      const rangeDataType = dataTypeFromScaleType(scaleType[rangeAxis]);\n\n      return {\n        [rangeAxis]: domainFromRangeData(data, rangeStartAccessor, rangeEndAccessor, rangeDataType)\n      };\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, []);\n    return shouldUpdate;\n  }\n\n  onMouseEnterLine = (e, d) => {\n    this.props.onMouseEnterLine(e, d);\n  };\n  onMouseMoveLine = (e, d) => {\n    this.props.onMouseMoveLine(e, d);\n  };\n  onMouseLeaveLine = (e, d) => {\n    this.props.onMouseLeaveLine(e, d);\n  };\n\n  render() {\n    const tickType = getTickType(this.props);\n    return <g className=\"marker-line-chart\">\n      {tickType === 'RangeValue' ?\n        this.props.data.map(this.renderRangeValueLine) :\n        this.props.data.map(this.renderValueValueLine)\n      }\n    </g>\n  }\n\n  renderRangeValueLine = (d, i) => {\n    const [onMouseEnter, onMouseMove, onMouseLeave] =\n      ['onMouseEnterLine', 'onMouseMoveLine', 'onMouseLeaveLine'].map(eventName => {\n        // partially apply this bar's data point as 2nd callback argument\n        const callback = methodIfFuncProp(eventName, this.props, this);\n        return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n      });\n\n    const {getX, getXEnd, getY, getYEnd, horizontal, scale} = this.props;\n    const xVal = scale.x(makeAccessor(getX)(d));\n    const yVal = scale.y(makeAccessor(getY)(d));\n    const xEndVal = _.isUndefined(getXEnd) ? 0 : scale.x(makeAccessor(getXEnd)(d));\n    const yEndVal = _.isUndefined(getYEnd) ? 0 : scale.y(makeAccessor(getYEnd)(d));\n    const [x1, y1] = [xVal, yVal];\n    const x2 = horizontal ?  xVal : xEndVal;\n    const y2 = horizontal ? yEndVal : yVal;\n    const key = `marker-line-${i}`;\n\n    if(!_.every([x1, x2, y1, y2], _.isFinite)) return null;\n    return <line className=\"marker-line\" {...{x1, x2, y1, y2, key, onMouseEnter, onMouseMove, onMouseLeave}} />\n  };\n\n  renderValueValueLine = (d, i) => {\n    const [onMouseEnter, onMouseMove, onMouseLeave] =\n      ['onMouseEnterLine', 'onMouseMoveLine', 'onMouseLeaveLine'].map(eventName => {\n        // partially apply this bar's data point as 2nd callback argument\n        const callback = methodIfFuncProp(eventName, this.props, this);\n        return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n      });\n\n    const {getX, getY, horizontal, lineLength, scale} = this.props;\n    const xVal = scale.x(makeAccessor(getX)(d));\n    const yVal = scale.y(makeAccessor(getY)(d));\n    const x1 = (!horizontal) ? xVal - (lineLength / 2) : xVal;\n    const x2 = (!horizontal) ? xVal + (lineLength / 2) : xVal;\n    const y1 = (!horizontal) ? yVal : yVal - (lineLength / 2);\n    const y2 = (!horizontal) ? yVal : yVal + (lineLength / 2);\n    const key = `marker-line-${i}`;\n\n    if(!_.every([x1, x2, y1, y2], _.isFinite)) return null;\n    return <line className=\"marker-line\" {...{x1, x2, y1, y2, key, onMouseEnter, onMouseMove, onMouseLeave}} />;\n  };\n}\n"]}