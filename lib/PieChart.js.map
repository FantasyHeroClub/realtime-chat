{"version":3,"sources":["../src/PieChart.js"],"names":["CustomPropTypes","DEFAULT_PROPS","getValue","margin","top","bottom","left","right","markerLineClass","markerLineOverhangInner","markerLineOverhangOuter","DEFAULT_SIZE","PieChart","onMouseEnterSlice","e","d","props","onMouseMoveSlice","onMouseLeaveSlice","onMouseEnterLine","onMouseMoveLine","onMouseLeaveLine","isNumber","defaults","width","radius","height","Math","min","holeRadius","center","x","y","markerLineValue","valueAccessor","sum","sumBy","data","total","markerLinePercent","isFinite","startPercent","map","i","callback","eventName","isFunction","partial","onMouseEnter","onMouseMove","onMouseLeave","className","slicePercent","endPercent","pathStr","pieSlicePath","key","renderMarkerLine","markerLine","centerLabel","renderCenterLabel","pathData","lineD","value","style","textAnchor","dominantBaseline","Component","propTypes","array","isRequired","getter","number","oneOfType","object","string","func","defaultProps","percentValue","overhangOuter","overhangInner","startX","sin","PI","startY","cos","c","r","rH","x0","y0","max","r0","r1","join","endX","endY","largeArc","x1","y1","concat"],"mappings":"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","file":"PieChart.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport {methodIfFuncProp} from './util.js';\nimport {makeAccessor} from './utils/Data';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\n\nconst DEFAULT_PROPS = {\n  getValue: null,\n  margin: { top: 0, bottom: 0, left: 0, right: 0 },\n  markerLineClass: 'marker-line',\n  markerLineOverhangInner: 2,\n  markerLineOverhangOuter: 2\n};\n\n// default height/width, used only if height & width & radius are all undefined\nconst DEFAULT_SIZE = 150;\n\nclass PieChart extends React.Component {\n  static propTypes = {\n    // array of data to plot with pie chart\n    data: PropTypes.array.isRequired,\n    // (optional) accessor for getting the values plotted on the pie chart\n    // if not provided, just uses the value itself at given index\n    getValue: CustomPropTypes.getter,\n    // (optional) total expected sum of all the pie slice values\n    // if provided && slices don't add up to total, an \"empty\" slice will be rendered for the rest\n    // if not provided, will be the sum of all values (ie. all values will always add up to 100%)\n    total: PropTypes.number,\n    // (optional) height and width of the SVG\n    // if only one is passed, same # is used for both (ie. width=100 means height=100 also)\n    // if neither is passed, but radius is, radius+margins is used\n    // if neither is passed, and radius isn't either, DEFAULTS.size is used\n    width: PropTypes.number,\n    height: PropTypes.number,\n    // (optional) main radius of the pie chart, inferred from margin/width/height if not provided\n    radius: PropTypes.number,\n    // (optional) margins (between svg edges and pie circle), inferred from radius/width/height if not provided\n    // can either be a single number (to make all margins equal), or {top, bottom, left, right} object\n    margin: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    // (optional) radius of the \"donut hole\" circle drawn on top of the pie chart to turn it into a donut chart\n    holeRadius: PropTypes.number,\n    // (optional) label text to display in the middle of the pie/donut\n    centerLabel: PropTypes.string,\n\n    markerLineValue: PropTypes.number,\n    markerLineClass: PropTypes.string,\n    markerLineOverhangInner: PropTypes.number,\n    markerLineOverhangOuter: PropTypes.number,\n\n    onMouseEnterLine: PropTypes.func,\n    onMouseMoveLine: PropTypes.func,\n    onMouseLeaveLine: PropTypes.func\n  };\n  static defaultProps = DEFAULT_PROPS;\n\n  onMouseEnterSlice = (e, d) => {\n    this.props.onMouseEnterSlice(e, d);\n  };\n  onMouseMoveSlice = (e, d) => {\n    this.props.onMouseMoveSlice(e, d);\n  };\n  onMouseLeaveSlice = (e, d) => {\n    this.props.onMouseLeaveSlice(e, d);\n  };\n\n  onMouseEnterLine = (e, d) => {\n    this.props.onMouseEnterLine(e, d);\n  };\n  onMouseMoveLine = (e, d) => {\n    this.props.onMouseMoveLine(e, d);\n  };\n  onMouseLeaveLine = (e, d) => {\n    this.props.onMouseLeaveLine(e, d);\n  };\n\n  render() {\n    const margin = _.isNumber(this.props.margin) ?\n    {top: this.props.margin, bottom: this.props.margin, left: this.props.margin, right: this.props.margin} :\n      _.defaults({}, this.props.margin, DEFAULT_PROPS.margin);\n    // sizes fallback based on provided info: given dimension -> radius + margin -> other dimension -> default\n    const width = this.props.width ||\n      (this.props.radius ? (this.props.radius * 2) + margin.left + margin.right : this.props.height)\n      || DEFAULT_SIZE;\n    const height = this.props.height ||\n      (this.props.radius ? (this.props.radius * 2) + margin.top + margin.bottom : this.props.width)\n      || DEFAULT_SIZE;\n    const radius = this.props.radius ||\n      Math.min((width - (margin.left + margin.right)) / 2, (height - (margin.top + margin.bottom)) / 2);\n    const {holeRadius} = this.props;\n    const center = {x: margin.left + radius, y: margin.top + radius};\n\n    const {markerLineValue, markerLineClass, markerLineOverhangInner, markerLineOverhangOuter} = this.props;\n\n    const valueAccessor = makeAccessor(this.props.getValue);\n    const sum = _.sumBy(this.props.data, valueAccessor);\n    const total = this.props.total || sum;\n    const markerLinePercent = _.isFinite(markerLineValue) ? markerLineValue / total : null;\n\n    let startPercent = 0;\n    return <svg className=\"pie-chart\" {...{width, height}}>\n      {this.props.data.map((d, i) => {\n        const [onMouseEnter, onMouseMove, onMouseLeave] =\n          ['onMouseEnterSlice', 'onMouseMoveSlice', 'onMouseLeaveSlice'].map(eventName => {\n            // partially apply this bar's data point as 2nd callback argument\n            const callback = methodIfFuncProp(eventName, this.props, this);\n            return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n          });\n\n        const className = `pie-slice pie-slice-${i}`;\n        const slicePercent = valueAccessor(d) / total;\n        const endPercent = startPercent + slicePercent;\n        const pathStr = pieSlicePath(startPercent, endPercent, center, radius, holeRadius);\n        startPercent += slicePercent;\n        const key = `pie-slice-${i}`;\n\n        return <path {...{className, d: pathStr, onMouseEnter, onMouseMove, onMouseLeave, key}} />;\n      })}\n\n      {sum < total ? // draw empty slice if the sum of slices is less than expected total\n        <path\n          className='pie-slice pie-slice-empty'\n          d={pieSlicePath(startPercent, 1, center, radius, holeRadius)}\n          key=\"pie-slice-empty\"\n        /> : null\n      }\n\n      {_.isFinite(markerLinePercent) ?\n        this.renderMarkerLine(markerLineClass, markerLine(markerLinePercent, center, radius, holeRadius, markerLineOverhangOuter, markerLineOverhangInner), 'pie-slice-marker-line')\n        : null\n      }\n\n      {this.props.centerLabel ? this.renderCenterLabel(center) : null}\n    </svg>\n  }\n\n  renderMarkerLine(className, pathData, key) {\n    const lineD = {\n      value: this.props.markerLineValue\n    };\n\n    const [onMouseEnter, onMouseMove, onMouseLeave] =\n      ['onMouseEnterLine', 'onMouseMoveLine', 'onMouseLeaveLine'].map(eventName => {\n        // partially apply this bar's data point as 2nd callback argument\n        const callback = methodIfFuncProp(eventName, this.props, this);\n        return _.isFunction(callback) ? _.partial(callback, _, lineD) : null;\n      });\n\n    return <path\n      className={className}\n      d={pathData}\n      key={key}\n      {...{onMouseEnter, onMouseMove, onMouseLeave}}\n    />\n  }\n\n  renderCenterLabel(center) {\n    const {x, y} = center;\n    const style = {textAnchor: 'middle', dominantBaseline: 'central'};\n    return <text className='pie-label-center' {...{x, y, style}}>\n      {this.props.centerLabel}\n    </text>\n  }\n}\n\nfunction markerLine(percentValue, center, radius, holeRadius=0, overhangOuter=0, overhangInner=0) {\n  if(percentValue == 1) endPercent = .9999999; // arc cannot be a full circle\n  const startX = Math.sin((2 * Math.PI) / (1 / percentValue));\n  const startY = Math.cos((2 * Math.PI) / (1 / percentValue));\n  const [c, r, rH, x0, y0] = [center, radius, holeRadius, startX, startY];\n  const [r0, r1] = [Math.max(rH - overhangInner, 0), r + overhangOuter];\n\n  return [ // construct a string representing the marker line\n    `M ${c.x + (x0 * r0)},${c.y - (y0 * r0)}`, // start at edge of inner (hole) circle, or center if no hole\n    `L ${c.x + (x0 * r1)},${c.y - (y0 * r1)} z` // straight line to outer circle, along radius\n  ].join(' ');\n}\n\nfunction pieSlicePath(startPercent, endPercent, center, radius, holeRadius=0) {\n  if(endPercent == 1) endPercent = .9999999; // arc cannot be a full circle\n  const startX = Math.sin((2 * Math.PI) / (1 / startPercent));\n  const startY = Math.cos((2 * Math.PI) / (1 / startPercent));\n  const endX = Math.sin((2 * Math.PI) / (1 / endPercent));\n  const endY = Math.cos((2 * Math.PI) / (1 / endPercent));\n  const largeArc = (endPercent - startPercent <= 0.5) ? 0 : 1;\n  const [c, r, rH, x0, x1, y0, y1] = [center, radius, holeRadius, startX, endX, startY, endY];\n\n  return [ // construct a string representing the pie slice path\n    `M ${c.x + (x0 * rH)},${c.y - (y0 * rH)}`, // start at edge of inner (hole) circle, or center if no hole\n    `L ${c.x + (x0 * r)},${c.y - (y0 * r)}`, // straight line to outer circle, along radius\n    `A ${r},${r} 0 ${largeArc} 1 ${c.x + (x1 * r)},${c.y - (y1 * r)}` // outer arc\n  ].concat(holeRadius ? [ // if we have an inner (donut) hole, draw an inner arc too, otherwise we're done\n    `L ${c.x + (x1 * rH)},${c.y - (y1 * rH)}`, // straight line to inner (hole) circle, along radius\n    `A ${rH},${rH} 0 ${largeArc} 0 ${c.x + (x0 * rH)},${c.y - (y0 * rH)} z` // inner arc\n  ] : 'z').join(' ');\n}\n\nexport default PieChart;\n"]}