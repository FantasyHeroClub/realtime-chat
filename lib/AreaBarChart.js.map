{"version":3,"sources":["../src/AreaBarChart.js"],"names":["CustomPropTypes","AreaBarChart","nextProps","nextState","shouldUpdate","props","scale","data","horizontal","getX","getXEnd","getY","getYEnd","barClassName","barStyle","getClass","barProps","style","getZero","constant","map","d","i","callback","get","eventName","isFunction","partial","onMouseEnter","onMouseMove","onMouseLeave","className","scaleType","rangeAxis","rangeDataType","rangeStartAccessor","toUpperCase","rangeEndAccessor","Component","propTypes","xyObjectOf","func","isRequired","array","bool","getter","string","object","onMouseEnterBar","onMouseMoveBar","onMouseLeaveBar","defaultProps"],"mappings":"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","file":"AreaBarChart.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport {hasXYScales, dataTypeFromScaleType} from './utils/Scale';\nimport {makeAccessor, domainFromRangeData} from './utils/Data';\nimport xyPropsEqual from './utils/xyPropsEqual';\nimport RangeRect from './RangeRect';\n\nexport default class AreaBarChart extends React.Component {\n  static propTypes = {\n    scale: CustomPropTypes.xyObjectOf(PropTypes.func.isRequired),\n    data: PropTypes.array,\n    horizontal: PropTypes.bool,\n\n    getX: CustomPropTypes.getter,\n    getXEnd: CustomPropTypes.getter,\n    getY: CustomPropTypes.getter,\n    getYEnd: CustomPropTypes.getter,\n    getClass: CustomPropTypes.getter,\n\n    barClassName: PropTypes.string,\n    barStyle: PropTypes.object,\n\n    onMouseEnterBar: PropTypes.func,\n    onMouseMoveBar: PropTypes.func,\n    onMouseLeaveBar: PropTypes.func\n  };\n  static defaultProps = {\n    data: [],\n    horizontal: false,\n    barClassName: '',\n    barStyle: {}\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, ['barStyle']);\n    // console.log('should areabarchart update?', shouldUpdate);\n    return shouldUpdate;\n  }\n\n  static getDomain(props) {\n    const {scaleType, horizontal, data} = props;\n\n    // only have to specify range axis domain, other axis uses default domainFromData\n    // for area bar chart, the independent variable is the range\n    // ie. the range controls the thickness of the bar\n    const rangeAxis = horizontal ? 'y' : 'x';\n    const rangeDataType = dataTypeFromScaleType(scaleType[rangeAxis]);\n    // make accessor functions from getX|Y and getX|YEnd\n    const rangeStartAccessor = makeAccessor(props[`get${rangeAxis.toUpperCase()}`]);\n    const rangeEndAccessor = makeAccessor(props[`get${rangeAxis.toUpperCase()}End`]);\n\n    return {\n      [rangeAxis]: domainFromRangeData(data, rangeStartAccessor, rangeEndAccessor, rangeDataType)\n    };\n  }\n\n  render() {\n    const {scale, data, horizontal, getX, getXEnd, getY, getYEnd, barClassName, barStyle, getClass} = this.props;\n    invariant(hasXYScales(scale), `AreaBarChart.props.scale.x and scale.y must both be valid d3 scales`);\n\n    const barProps = {\n      scale,\n      style: barStyle\n    };\n    const getZero = _.constant(0);\n\n    return <g>\n      {data.map((d, i) => {\n        const [onMouseEnter, onMouseMove, onMouseLeave] =\n          ['onMouseEnterBar', 'onMouseMoveBar', 'onMouseLeaveBar'].map(eventName => {\n\n            // partially apply this bar's data point as 2nd callback argument\n            const callback = _.get(this.props, eventName);\n            return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n        });\n\n        barProps.className = `chart-area-bar ${getClass ? makeAccessor(getClass)(d) : ''} ${barClassName}`; \n        return <RangeRect\n          datum={d}\n          getX={horizontal ? getZero : getX}\n          getXEnd={horizontal ? getX : getXEnd}\n          getY={!horizontal ? getZero : getY}\n          getYEnd={!horizontal ? getY : getYEnd}\n          key={`chart-area-bar-${i}`}\n          onMouseEnter={onMouseEnter} \n          onMouseMove={onMouseMove} \n          onMouseLeave={onMouseLeave}\n          {...barProps}\n        />;\n      })}\n    </g>;\n  }\n}\n"]}