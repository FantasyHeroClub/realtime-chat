{"version":3,"sources":["../src/FunnelChart.js"],"names":["CustomPropTypes","FunnelChart","nextProps","nextState","shouldUpdate","props","data","scale","getX","getY","horizontal","funnelArea","x0","x","d","x1","y","y0","y1","colors","domain","range","map","i","pathStr","fill","stroke","scaleType","xAccessor","yAccessor","xDataType","yDataType","Component","propTypes","xyObjectOf","func","isRequired","array","getter","defaultProps"],"mappings":"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","file":"FunnelChart.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {area, scaleOrdinal, schemeCategory20b} from 'd3';\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport {makeAccessor, domainFromData, combineDomains} from './utils/Data';\nimport {dataTypeFromScaleType} from './utils/Scale';\nimport xyPropsEqual from './utils/xyPropsEqual';\n\nexport default class FunnelChart extends React.Component {\n  static propTypes = {\n    // passed from xyplot\n\n    scale: CustomPropTypes.xyObjectOf(PropTypes.func.isRequired),\n    // data array\n    data: PropTypes.array.isRequired,\n    // data getters\n    getX: CustomPropTypes.getter,\n    getY: CustomPropTypes.getter\n  };\n  static defaultProps = {\n\n  };\n\n  static getDomain(props) {\n    const {data, scale, scaleType, getX, getY, horizontal} = props;\n    const [xAccessor, yAccessor] = [makeAccessor(getX), makeAccessor(getY)];\n    const [xDataType, yDataType] = [dataTypeFromScaleType(scaleType.x), dataTypeFromScaleType(scaleType.y)];\n\n    return horizontal ?\n      {\n        x: combineDomains([\n          domainFromData(data, xAccessor, xDataType),\n          domainFromData(data, d => -xAccessor(d), xDataType)\n        ]),\n        y: domainFromData(data, yAccessor, yDataType)\n      } :\n      {\n        x: domainFromData(data, xAccessor, xDataType),\n        y: combineDomains([\n          domainFromData(data, yAccessor, yDataType),\n          domainFromData(data, d => -yAccessor(d), yDataType)\n        ])\n      };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, []);\n    return shouldUpdate;\n  }\n\n  render() {\n    const {data, scale, getX, getY, horizontal} = this.props;\n\n    const funnelArea = area();\n    if(horizontal) {\n      funnelArea\n        .x0(d => scale.x(-makeAccessor(getX)(d)))\n        .x1(d => scale.x(makeAccessor(getX)(d)))\n        .y(d => scale.y(makeAccessor(getY)(d)));\n    } else {\n      funnelArea\n        .x(d => scale.x(makeAccessor(getX)(d)))\n        .y0(d => scale.y(-makeAccessor(getY)(d)))\n        .y1(d => scale.y(makeAccessor(getY)(d)));\n    }\n\n    const colors = scaleOrdinal(schemeCategory20b).domain(_.range(10));\n\n    return <g className=\"funnel-chart\">\n      {data.map((d, i) => {\n        if(i == 0) return null;\n        const pathStr = funnelArea([data[i-1], d]);\n\n        return <path d={pathStr} style={{fill: colors(i-1), stroke: 'transparent'}} />;\n      })}\n    </g>\n  }\n}\n"]}