{"version":3,"sources":["../../src/utils/depthEqual.js"],"names":["depthEqual","hasOwnProperty","Object","prototype","objA","objB","depth","keysA","keys","keysB","length","bHasOwnProperty","bind","i","aKey"],"mappings":";;;;;;;;kBAIwBA,U;AAJxB;;AAEA,IAAMC,iBAAiBC,OAAOC,SAAP,CAAiBF,cAAxC;;AAEe,SAASD,UAAT,CAAoBI,IAApB,EAA0BC,IAA1B,EAA2C;AAAA,MAAXC,KAAW,uEAAH,CAAG;;AACxD,MAAIF,SAASC,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAIC,UAAU,CAAV,IACA,QAAOF,IAAP,yCAAOA,IAAP,OAAgB,QADhB,IAC4BA,SAAS,IADrC,IAEA,QAAOC,IAAP,yCAAOA,IAAP,OAAgB,QAFhB,IAE4BA,SAAS,IAFzC,EAE+C;AAC7C;AACA,WAAO,KAAP;AACD;;AAED,MAAME,QAAQL,OAAOM,IAAP,CAAYJ,IAAZ,CAAd;AACA,MAAMK,QAAQP,OAAOM,IAAP,CAAYH,IAAZ,CAAd;;AAEA,MAAIE,MAAMG,MAAN,KAAiBD,MAAMC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD;;AAED;AACA,MAAMC,kBAAkBV,eAAeW,IAAf,CAAoBP,IAApB,CAAxB;AACA,OAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIN,MAAMG,MAA1B,EAAkCG,GAAlC,EAAuC;AACrC,QAAMC,OAAOP,MAAMM,CAAN,CAAb;AACA,QAAI,CAACF,gBAAgBG,IAAhB,CAAD;AACA;AACA,KAACd,WAAWI,KAAKU,IAAL,CAAX,EAAuBT,KAAKS,IAAL,CAAvB,EAAmCR,QAAQ,CAA3C,CAFL,EAEoD;AAClD;AACA,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","file":"depthEqual.js","sourcesContent":["// Based on https://github.com/acdlite/recompose/blob/master/src/packages/recompose/shallowEqual.js\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nexport default function depthEqual(objA, objB, depth = 1) {\n  if (objA === objB) {\n    return true\n  }\n\n  if (depth === 0 ||\n      typeof objA !== 'object' || objA === null ||\n      typeof objB !== 'object' || objB === null) {\n    // console.log('different obj', objA, objB);\n    return false\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) {\n    return false\n  }\n\n  // Test for A's keys different from B.\n  const bHasOwnProperty = hasOwnProperty.bind(objB)\n  for (let i = 0; i < keysA.length; i++) {\n    const aKey = keysA[i];\n    if (!bHasOwnProperty(aKey) ||\n        // recursively call depthEqual at the next level; depth 0 is === check\n        !depthEqual(objA[aKey], objB[aKey], depth - 1)) {\n      // console.log('different key', aKey, objA, objB);\n      return false\n    }\n  }\n\n  return true\n}\n"]}