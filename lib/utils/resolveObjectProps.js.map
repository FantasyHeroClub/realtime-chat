{"version":3,"sources":["../../src/utils/resolveObjectProps.js"],"names":["resolveObjectProps","errs","badDefault","Component","key","objKeys","componentName","join","displayName","hasSome","obj","keys","isObject","some","has","k","hasAll","every","resolveProp","prop","defaultProp","defaults","isUndefined","fromPairs","map","ComposedComponent","propKeys","nextProps","shouldUpdate","omit","props","pick","console","log","defaultProps","_defaultProps","resolvedProps","resolved","assign","getScaleType","getDomain","getMargin"],"mappings":"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","file":"resolveObjectProps.js","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport invariant from 'invariant';\nimport depthEqual from './depthEqual';\n\n/**\n * `resolveObjectProps` is a higher-order-component.\n * It wraps Components which expect some object props of a certain shape, eg. {a,b,c}.\n *\n * It allows those props to be passed normally as an object like `{a: 5, b: [2], c: 'foo'}`,\n * or as an incompletely specified object like `{a: 5}`\n *   -> the specified value will be used and the missing values will be filled from defaultProps object\n * or as a single value like `5`\n *   -> an object with be created with all expected keys equal to this value (`{a: 5, b: 5, c: 5}`)\n * or not passed at all\n *   -> defaultProps will be used normally\n *\n * Note that the Component must specify defaultProps for defaults to be resolved correctly.\n *\n * @example\n * class BoxThing extends React.Component {...}\n * export default resolveObjectProps(BoxThing, ['margin', 'padding'], ['top', 'left', 'bottom', 'right']);\n * // then you can use <BoxThing> with incompletely specified props:\n * render() { return <BoxThing margin={5} padding={top: 10, bottom: 20} />; }\n *\n * @param {Component} Component - The React Component (class) which should be wrapped by this HOC\n * @param {string[]} propKeys - A list of keys for all the object props it is expected to resolve.\n * @param {string[]} objKeys - A list of keys for which values will be resolved on each object prop (object shape).\n * @returns {Component} - A Component which auto-resolves the specified object props.\n */\n\nconst errs = {\n  badDefault: (Component, key, objKeys) => {\n    return `Bad defaultProp in ${componentName(Component)}: Prop '${key}' is expected to be a ` +\n      `{${objKeys.join(',')}}-shaped object, but it has a defaultProp which is not this shape.`;\n  }\n};\nfunction componentName(Component) {\n  return Component.displayName || \"Component wrapped by resolveObjectProps\";\n}\n\nfunction hasSome(obj, keys) {\n  return _.isObject(obj) && _.some(keys, k => _.has(obj, k));\n}\nfunction hasAll(obj, keys) {\n  return _.isObject(obj) && _.every(keys, k => _.has(obj, k));\n}\n\nfunction resolveProp(prop, objKeys, defaultProp) {\n  // pass through objects which are already fully specified\n  if(hasAll(prop, objKeys)) return prop;\n  // for partially specified objects, use default for the other (unspecified) values\n  if(hasSome(prop, objKeys)) return _.defaults(prop, defaultProp);\n  // for single values, create an object with the same value for each expected key\n  return _.isUndefined(prop) ? defaultProp :\n    // for undefined prop values, return the entire defaultProp\n    _.fromPairs(objKeys.map(k => [k, prop]));\n}\n\n\nexport default function resolveObjectProps(ComposedComponent, propKeys, objKeys) {\n  return class extends React.Component {\n    // attach static reference to default props so that we can compose multiple resolveObjectProps wrappers,\n    // but don't call it defaultProps, to avoid actually triggering the default behavior\n    static _defaultProps = ComposedComponent.defaultProps;\n    static getScaleType = ComposedComponent.getScaleType;\n    static getDomain = ComposedComponent.getDomain;\n    static getMargin = ComposedComponent.getMargin;\n\n    shouldComponentUpdate(nextProps) {\n      // 2-level-deep object compare for props which we expect to be objects\n      // so that parent can pass object literals efficiently\n      // shallow compare for all other props\n\n\n      // todo fix this????\n      // broken for InteractiveLineExample, maybe for anything with children?\n      return true;\n\n      const shouldUpdate = !(\n        depthEqual(_.omit(this.props, propKeys), _.omit(this.props, propKeys), 1) &&\n        depthEqual(_.pick(this.props, propKeys), _.pick(nextProps, propKeys), 2)\n      );\n      console.log('resolveObjectProps shouldComponentUpdate', shouldUpdate);\n      return shouldUpdate;\n    }\n\n    render() {\n      const defaultProps = ComposedComponent.defaultProps || ComposedComponent._defaultProps || {};\n      \n      const resolvedProps = _.fromPairs(propKeys.map(k => {\n        invariant( // ensure ComposedComponent has undefined or good default for each prop\n          _.isUndefined(defaultProps[k]) || _.isObject(defaultProps[k]),\n          errs.badDefault(ComposedComponent, k, objKeys)\n        );\n\n        const resolved = resolveProp(this.props[k], objKeys, defaultProps[k]);\n        return [k, resolved];\n      }));\n\n      const props = _.assign({}, this.props, resolvedProps);\n      return <ComposedComponent {...props} />;\n    }\n  }\n}\n"]}