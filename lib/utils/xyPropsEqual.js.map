{"version":3,"sources":["../../src/utils/xyPropsEqual.js"],"names":["xyPropsEqual","xyPropsEqualDebug","defaultPropKeysToDeepCheck","propsA","propsB","customKeysToDeepCheck","includeDefaults","propKeysToDeepCheck","concat","propKeysToSkipShallowCheck","isEqual","omit","every","key","get","isDeepEqual","console","log","isScaleEqual","scale"],"mappings":";;;;;;kBAiBwBA,Y;QAoBRC,iB,GAAAA,iB;;AArChB;;;;AACA;;;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,IAAMC,kEAA6B,CACxC,QADwC,EAC9B,WAD8B,EACjB,SADiB,EACN,QADM,EACI,OADJ,EACa,MADb,CAAnC;;AAIQ,SAASF,YAAT,CAAsBG,MAAtB,EAA8BC,MAA9B,EAA0F;AAAA,MAApDC,qBAAoD,uEAA5B,EAA4B;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;;AACvG,MAAMC,sBAAsBD,kBAC1BJ,2BAA2BM,MAA3B,CAAkCH,qBAAlC,CAD0B,GAE1BA,qBAFF;;AAIA,MAAMI,6BAA6BF,oBAAoBC,MAApB,CAA2B,OAA3B,CAAnC;;AAEA,MAAME;AACJ;AACA,8BAAa,iBAAEC,IAAF,CAAOR,MAAP,EAAeM,0BAAf,CAAb,EAAyD,iBAAEE,IAAF,CAAOP,MAAP,EAAeK,0BAAf,CAAzD;AACA;AACA,mBAAEG,KAAF,CAAQL,mBAAR,EAA6B,UAACM,GAAD;AAAA,WAAS,iBAAEH,OAAF,CAAUP,OAAOU,GAAP,CAAV,EAAuBT,OAAOS,GAAP,CAAvB,CAAT;AAAA,GAA7B,CAFA;AAGA;AACA,mBAAED,KAAF,CAAQ,CAAC,GAAD,EAAM,GAAN,CAAR,EAAoB,UAACC,GAAD,EAAS;AAC3B,WAAO,uBAAW,iBAAEC,GAAF,CAAMX,MAAN,aAAuBU,GAAvB,OAAX,EAA2C,iBAAEC,GAAF,CAAMX,MAAN,aAAuBU,GAAvB,OAA3C,CAAP;AACD,GAFD,CANF;;AAUA,SAAOH,OAAP;AACD;;AAEM,SAAST,iBAAT,CAA2BE,MAA3B,EAAmCC,MAAnC,EAA+F;AAAA,MAApDC,qBAAoD,uEAA5B,EAA4B;AAAA,MAAxBC,eAAwB,uEAAN,IAAM;;AACpG,MAAMC,sBAAsBD,kBAC1BJ,2BAA2BM,MAA3B,CAAkCH,qBAAlC,CAD0B,GAE1BA,qBAFF;AAGA;AACA;AACA,MAAMI,6BAA6BF,oBAAoBC,MAApB,CAA2B,OAA3B,CAAnC;;AAEA,MAAME;AACJ;AACA,8BAAa,iBAAEC,IAAF,CAAOR,MAAP,EAAeM,0BAAf,CAAb,EAAyD,iBAAEE,IAAF,CAAOP,MAAP,EAAeK,0BAAf,CAAzD,KACA,iBAAEG,KAAF,CAAQL,mBAAR,EAA6B,UAACM,GAAD,EAAS;AACpC,QAAME,cAAc,iBAAEL,OAAF,CAAUP,OAAOU,GAAP,CAAV,EAAuBT,OAAOS,GAAP,CAAvB,CAApB;AACA,QAAG,CAACE,WAAJ,EAAiBC,QAAQC,GAAR,eAAwBJ,GAAxB;AACjB,WAAOE,WAAP;AACD,GAJD,CADA,IAMA,iBAAEH,KAAF,CAAQ,CAAC,GAAD,EAAM,GAAN,CAAR,EAAoB,UAACC,GAAD,EAAS;AAC3B,QAAMK,eAAe,uBAAWf,OAAOgB,KAAP,CAAaN,GAAb,CAAX,EAA8BT,OAAOe,KAAP,CAAaN,GAAb,CAA9B,CAArB;AACA,QAAG,CAACK,YAAJ,EAAkBF,QAAQC,GAAR,qBAA8BJ,GAA9B;AAClB,WAAOK,YAAP;AACD,GAJD,CARF;;AAcA;AACA;AACA,SAAOR,OAAP;AACD","file":"xyPropsEqual.js","sourcesContent":["import _ from 'lodash';\nimport shallowEqual from './shallowEqual';\nimport {scaleEqual} from './Scale';\n\n// xyPropsEqual is a function used by XYPlot-type charts,\n// in their `shouldComponentUpdate` methods, for determining whether next props are the same as previous props.\n// in a perfect world this would just be a simple shallow equality check,\n// however some props are almost always passed as object/array literals (so they never ===)\n// or require special equality checks (eg. d3 scales)\n\n// default list of props to check for *deep equality* using _.isEqual\n// can be overridden by components by passing `propKeysToDeepCheck` argument\n// todo: decide whether data really belongs on this list? deep-checking data can be slow, but re-rendering is even slower\nexport const defaultPropKeysToDeepCheck = [\n  'margin', 'scaleType', 'spacing', 'domain', 'style', 'data'\n];\n\nexport default function xyPropsEqual(propsA, propsB, customKeysToDeepCheck = [], includeDefaults = true) {\n  const propKeysToDeepCheck = includeDefaults ?\n    defaultPropKeysToDeepCheck.concat(customKeysToDeepCheck) :\n    customKeysToDeepCheck;\n\n  const propKeysToSkipShallowCheck = propKeysToDeepCheck.concat('scale');\n\n  const isEqual =\n    // most keys just get shallow-equality checked\n    shallowEqual(_.omit(propsA, propKeysToSkipShallowCheck), _.omit(propsB, propKeysToSkipShallowCheck)) &&\n    // propKeysToDeepCheck get deep-equality checked using _.isEqual\n    _.every(propKeysToDeepCheck, (key) => _.isEqual(propsA[key], propsB[key])) &&\n    // d3 scales are special, get deep-checked using custom `scaleEqual` utility\n    _.every(['x', 'y'], (key) => {\n      return scaleEqual(_.get(propsA, `scale[${key}]`), _.get(propsA, `scale[${key}]`));\n    });\n\n  return isEqual;\n}\n\nexport function xyPropsEqualDebug(propsA, propsB, customKeysToDeepCheck = [], includeDefaults = true) {\n  const propKeysToDeepCheck = includeDefaults ?\n    defaultPropKeysToDeepCheck.concat(customKeysToDeepCheck) :\n    customKeysToDeepCheck;\n  // debug version of xyPropsEqual which console.logs, for figuring out which props are failing equality check\n  // const start = performance.now();\n  const propKeysToSkipShallowCheck = propKeysToDeepCheck.concat('scale');\n\n  const isEqual =\n    // most keys just get shallow-equality checked\n    shallowEqual(_.omit(propsA, propKeysToSkipShallowCheck), _.omit(propsB, propKeysToSkipShallowCheck)) &&\n    _.every(propKeysToDeepCheck, (key) => {\n      const isDeepEqual = _.isEqual(propsA[key], propsB[key]);\n      if(!isDeepEqual) console.log(`xyProps: ${key} not equal`);\n      return isDeepEqual;\n    }) &&\n    _.every(['x', 'y'], (key) => {\n      const isScaleEqual = scaleEqual(propsA.scale[key], propsB.scale[key]);\n      if(!isScaleEqual) console.log(`xyProps: scale.${key} not equal`);\n      return isScaleEqual;\n    });\n\n  // console.log('xyProps isEqual', isEqual);\n  // console.log('took', performance.now() - start);\n  return isEqual;\n}\n"]}