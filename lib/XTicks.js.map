{"version":3,"sources":["../src/XTicks.js"],"names":["XTicks","props","height","tickCount","position","tickLength","tickStyle","tickClassName","spacing","scale","x","placement","ticks","className","transform","bottom","top","map","tick","i","x1","y2","x2","y1","style","key","get","defaults","defaultProps","zeroMargin","left","right","Component","propTypes","shape","func","isRequired","nice"],"mappings":"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","file":"XTicks.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nimport {getScaleTicks, getTickDomain} from './utils/Scale';\n\nexport default class XTicks extends React.Component {\n  static propTypes = {\n    scale: PropTypes.shape({x: PropTypes.func.isRequired})\n  };\n  static defaultProps = {\n    position: 'bottom',\n    nice: true,\n    tickLength: 5,\n    tickStyle: {},\n    spacing: {top: 0, bottom: 0, left: 0, right: 0}\n  };\n\n  static getTickDomain(props) {\n    if(!_.get(props, 'scale.x')) return;\n    props = _.defaults({}, props, XTicks.defaultProps);\n    return {x: getTickDomain(props.scale.x, props)};\n  }\n\n  static getMargin(props) {\n    const {tickLength, position} = _.defaults({}, props, XTicks.defaultProps);\n    const placement = props.placement || ((position === 'top') ? 'above' : 'below');\n    const zeroMargin = {top: 0, bottom: 0, left: 0, right: 0};\n\n    if((position === 'bottom' && placement === 'above') || (position == 'top' && placement === 'below'))\n      return zeroMargin;\n\n    return _.defaults({[position]: tickLength || 0}, zeroMargin);\n  }\n\n  render() {\n    const {height, tickCount, position, tickLength, tickStyle, tickClassName, spacing} = this.props;\n    const scale = this.props.scale.x;\n    const placement = this.props.placement || ((position === 'top') ? 'above' : 'below');\n    const ticks = this.props.ticks || getScaleTicks(scale, null, tickCount);\n    const className = `chart-tick chart-tick-x ${tickClassName || ''}`;\n    const transform = (position === 'bottom') ?\n      `translate(0, ${height + spacing.bottom})` : `translate(0, ${-spacing.top})`;\n\n    return <g className=\"chart-ticks-x\" transform={transform}>\n      {ticks.map((tick, i) => {\n        const x1 = scale(tick);\n        const y2 = (placement === 'above') ? -tickLength : tickLength;\n\n        return <line {...{\n          x1, x2: x1, y1: 0, y2,\n          className,\n          style: tickStyle,\n          key: `tick-${i}`\n        }} />;\n      })}\n    </g>;\n  }\n}\n"]}