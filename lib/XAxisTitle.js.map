{"version":3,"sources":["../src/XAxisTitle.js"],"names":["XAxisTitle","props","height","width","distance","position","alignment","style","spacing","title","children","placement","rotate","posY","bottom","top","translateY","translateX","textAnchor","dy","defaults","defaultProps","zeroMargin","left","right","measured","assign","text","marginValue","Math","ceil","value","Component","propTypes","number","oneOf","bool","object","undefined","fontFamily","fontSize","fontWeight","lineHeight"],"mappings":"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","file":"XAxisTitle.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport measureText from 'measure-text';\nimport PropTypes from 'prop-types';\n\nexport default class XAxisTitle extends React.Component {\n  static propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    distance: PropTypes.number,\n    position: PropTypes.oneOf(['top', 'bottom']),\n    placement: PropTypes.oneOf(['above', 'below']),\n    alignment: PropTypes.oneOf(['left', 'center', 'right']),\n    rotate: PropTypes.bool,\n    style: PropTypes.object\n  };\n  static defaultProps = {\n    height: 250,\n    width: 400,\n    distance: 5,\n    position: 'bottom',\n    placement: undefined,\n    alignment: 'center',\n    rotate: false,\n    style: {\n      fontFamily: \"Helvetica, sans-serif\",\n      fontSize: '24px',\n      fontWeight: 'bold',\n      lineHeight: 1\n    },\n    spacing: {top: 0, bottom: 0, left: 0, right: 0}\n  };\n\n  static getMargin(props) {\n    props = _.defaults({}, props, XAxisTitle.defaultProps);\n    const {distance, position, rotate} = props;\n    const placement = props.placement || ((position === 'bottom') ? 'below' : 'above');\n    const zeroMargin = {top: 0, bottom: 0, left: 0, right: 0};\n\n    if((position === 'bottom' && placement === 'above') || (position == 'top' && placement === 'below'))\n      return zeroMargin;\n\n    const title = props.title || props.children;\n    const style = _.defaults(props.style, XAxisTitle.defaultProps.style);\n    const measured = measureText(_.assign({text: title}, style));\n\n    const marginValue = distance +\n      Math.ceil(rotate ?\n        measured.width.value :\n        measured.height.value\n      );\n\n    return (position === 'bottom') ?\n      {...zeroMargin, bottom: marginValue} :\n      {...zeroMargin, top: marginValue};\n  }\n\n  render() {\n    const {height, width, distance, position, alignment, style, spacing} = this.props;\n    const title = this.props.title || this.props.children;\n    const placement = this.props.placement || ((position === 'bottom') ? 'below' : 'above');\n    const rotate = this.props.rotate ? -90 : 0;\n\n    const posY = (position === 'bottom') ? height + spacing.bottom : -spacing.top;\n    const translateY = posY +\n      ((placement === 'above') ? -distance : distance);\n    const translateX =\n      (alignment === 'center') ? (width / 2) :\n      (alignment === 'right') ? (width) :\n      0;\n\n    const textAnchor =\n      (rotate && placement === 'above') ? 'start' :\n      (rotate && placement === 'below') ? 'end' :\n      (alignment === 'left') ? 'start' :\n      (alignment === 'right') ? 'end' :\n      'middle';\n\n    const dy =\n      (rotate && alignment === 'right') ? '-0.2em' :\n      (rotate && alignment === 'center') ? '0.3em' :\n      (rotate) ? '0.8em' :\n      (placement === 'below') ? '0.8em' :\n      '-0.2em';\n\n    return <g transform={`translate(${translateX},${translateY})`}>\n      <text style={{...style, textAnchor}} transform={`rotate(${rotate})`} dy={dy}>\n        {title}\n      </text>\n    </g>;\n  }\n}\n"]}