{"version":3,"sources":["../src/XAxisTitle.js"],"names":["XAxisTitle","props","height","width","distance","position","alignment","style","spacingTop","spacingBottom","title","children","placement","rotate","posY","translateY","translateX","textAnchor","dy","defaults","defaultProps","zeroMargin","marginTop","marginBottom","marginLeft","marginRight","measured","assign","text","marginValue","Math","ceil","value","Component","propTypes","number","oneOf","bool","object","undefined","fontFamily","fontSize","fontWeight","lineHeight"],"mappings":"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","file":"XAxisTitle.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport measureText from 'measure-text';\nimport PropTypes from 'prop-types';\n\nexport default class XAxisTitle extends React.Component {\n  static propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    distance: PropTypes.number,\n    position: PropTypes.oneOf(['top', 'bottom']),\n    placement: PropTypes.oneOf(['above', 'below']),\n    alignment: PropTypes.oneOf(['left', 'center', 'right']),\n    rotate: PropTypes.bool,\n    style: PropTypes.object,\n    spacingTop: PropTypes.number,\n    spacingBottom: PropTypes.number,\n  };\n  static defaultProps = {\n    height: 250,\n    width: 400,\n    distance: 5,\n    position: 'bottom',\n    placement: undefined,\n    alignment: 'center',\n    rotate: false,\n    style: {\n      fontFamily: \"Helvetica, sans-serif\",\n      fontSize: '24px',\n      fontWeight: 'bold',\n      lineHeight: 1\n    },\n    spacingTop: 0,\n    spacingBottom: 0\n  };\n\n  static getMargin(props) {\n    props = _.defaults({}, props, XAxisTitle.defaultProps);\n    const {distance, position, rotate} = props;\n    const placement = props.placement || ((position === 'bottom') ? 'below' : 'above');\n    const zeroMargin = {marginTop: 0, marginBottom: 0, marginLeft: 0, marginRight: 0};\n\n    if((position === 'bottom' && placement === 'above') || (position === 'top' && placement === 'below'))\n      return zeroMargin;\n\n    const title = props.title || props.children;\n    const style = _.defaults(props.style, XAxisTitle.defaultProps.style);\n    const measured = measureText(_.assign({text: title}, style));\n\n    const marginValue = distance +\n      Math.ceil(rotate ?\n        measured.width.value :\n        measured.height.value\n      );\n\n    return (position === 'bottom') ?\n      {...zeroMargin, marginBottom: marginValue} :\n      {...zeroMargin, marginTop: marginValue};\n  }\n\n  render() {\n    const {height, width, distance, position, alignment, style, spacingTop, spacingBottom} = this.props;\n    const title = this.props.title || this.props.children;\n    const placement = this.props.placement || ((position === 'bottom') ? 'below' : 'above');\n    const rotate = this.props.rotate ? -90 : 0;\n\n    const posY = (position === 'bottom') ? height + spacingBottom : -spacingTop;\n    const translateY = posY +\n      ((placement === 'above') ? -distance : distance);\n    const translateX =\n      (alignment === 'center') ? (width / 2) :\n      (alignment === 'right') ? (width) :\n      0;\n\n    const textAnchor =\n      (rotate && placement === 'above') ? 'start' :\n      (rotate && placement === 'below') ? 'end' :\n      (alignment === 'left') ? 'start' :\n      (alignment === 'right') ? 'end' :\n      'middle';\n\n    const dy =\n      (rotate && alignment === 'right') ? '-0.2em' :\n      (rotate && alignment === 'center') ? '0.3em' :\n      (rotate) ? '0.8em' :\n      (placement === 'below') ? '0.8em' :\n      '-0.2em';\n\n    return <g transform={`translate(${translateX},${translateY})`}>\n      <text style={{...style, textAnchor}} transform={`rotate(${rotate})`} dy={dy}>\n        {title}\n      </text>\n    </g>;\n  }\n}\n"]}