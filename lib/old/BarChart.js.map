{"version":3,"sources":["../../src/old/BarChart.js"],"names":["d3","getBarChartType","props","getEndValue","orientation","isVertical","isUndefined","x","y","barZeroValue","data","dAccessor","scaleType","extent","valueAxisDomain","concat","uniq","map","rangeAxisDomain","rangeStartAccessor","rangeEndAccessor","flatten","d","BarChart","createClass","mixins","propTypes","array","isRequired","getValue","object","getX","getY","getXEnd","getYEnd","getClass","barThickness","number","name","string","scale","oneOf","onMouseEnterBar","func","onMouseMoveBar","onMouseLeaveBar","getDefaultProps","statics","getOptions","xAccessor","yAccessor","barType","accessors","rangeEndAccessors","options","domain","spacing","valueAxis","halfBar","Math","ceil","left","right","top","bottom","rangeAxis","getHovered","e","render","renderer","renderValueValueBars","classAccessor","i","callback","eventName","isFunction","partial","onMouseEnter","onMouseMove","onMouseLeave","valueScale","valueScaleType","valueAccessor","barZero","value","barLength","abs","className","width","height","key","every","isFinite","renderRangeValueBars","xEndAccessor","yEndAccessor","yVal","barY","barX","round","xVal","renderValueRangeBars","renderNotImplemented","renderRangeRangeBars","text","overflow"],"mappings":"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","file":"BarChart.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport * as d3 from 'd3';\n\nimport {accessor, AccessorPropType, InterfaceMixin, methodIfFuncProp} from './util.js';\n\n// on the taxonomy of bar charts:\n\n// there are 3 types of bar charts,\n// distinguished by whether the 2D data points they plot represent values or ranges\n\n// 1. Value-Value\n// typical bar chart, plotting values that look like [[0,5], [1,3], ...]\n// with bars that are centered horizontally on x-value and extend from 0 to y-value,\n// (or centered vertically on their y-value and extend from 0 to the x-value, in the case of horizontal chart variant)\n// eg. http://www.snapsurveys.com/wp-content/uploads/2012/10/bar_2d8.png\n\n// 2. Range-Value\n// instead of a single value, one of the two data points represents a range of values\n// usually the range is the independent variable and the value is the observation\n// most commonly used in histogram, where each bar represents a bin (which is a range)\n// data may look something like [[0, 5], 100], [[5, 15], 300], ...] or [{x: 0, xEnd: 5, y:100}...]\n// often all bars are the same width, (same range sizes) but not necessarily\n// bars still from extend from 0 to y-value,\n// but the x-values of their sides, and therefore their width, is determined by the range\n// (or vice versa in the case of horizontal variant)\n// eg. http://labs.physics.dur.ac.uk/skills/skills/images/histogram4.jpg\n\n// 3. Value-Range\n// like Range-Value, one of the two data points represents a range of values\n// but generally the range is the dependent variable (ie. observation) instead of vice versa in #2\n// bars are centered over their x-value as in #1,\n// but their top & bottom y-values, and therefore their length, is determined by the range. they don't extend to 0.\n// (or vice versa in the case of horizontal variant)\n// eg. (horizontal) http://6.anychart.com/products/anychart/docs/users-guide/img/Samples/sample-range-bar-chart-y-datetime-axis.png\n\n// 4. Range-Range\n// both of the data points represent ranges\n// ie. data looks like [{x: 10, xEnd: 20, y: 12, yEnd: 40} ...]\n// these are simply plotted as floating rectangles whose coordinates, length and width are all determined by the ranges\n// there is no horizontal or vertical variant\n// eg... can't find a good example\n\n// creating a BarChart component...\n// x and y values are represented by getValue.x and getValue.y accessors passed in as props\n// to represent a range instead of a single value, call with both getValue.x and getEndValue.x (or y),\n// which will be the accessors for the start and end values of the range\n// to represent horizontal vs. vertical variant, pass in orientation=\"horizontal\" or orientation=\"vertical\"\n\n// so to create the types described above:\n// 1. Value-Value - only pass in getValue.x and getValue.y, + orientation\n// 2. Range-Value\n//   a. pass in getValue.x, getEndValue.x and getValue.y with orientation=\"vertical\"\n//   b. or getValue.x, getValue.y and getEndValue.y with orientation=\"horizontal\"\n// 3. Value-Range\n//   a. pass in getValue.x, getValue.y and getEndValue.y with orientation=\"vertical\"\n//   b. or getValue.x, getEndValue.x and getValue.y with orientation=\"horizontal\"\n// 4. Range-Range - pass in ALL of getValue.x, getValue.y, getEndValue.x and getEndValue.y. no need for orientation.\n\n//const BAR_CHART_TYPES = {\n//    VALUE_VALUE: 'VALUE_VALUE',\n//    RANGE_VALUE: 'RANGE_VALUE',\n//    VALUE_RANGE: 'VALUE_RANGE',\n//    RANGE_RANGE: 'RANGE_RANGE',\n//};\n\nfunction getBarChartType(props) {\n  const {getEndValue, orientation} = props;\n  const isVertical = (orientation === 'vertical');\n  return _.isUndefined(getEndValue.x) && _.isUndefined(getEndValue.y) ?\n    'ValueValue' :\n    (_.isUndefined(getEndValue.y) && isVertical) || (_.isUndefined(getEndValue.x) && !isVertical) ?\n      'RangeValue' :\n      (_.isUndefined(getEndValue.x) && isVertical) || (_.isUndefined(getEndValue.y) && !isVertical) ?\n        'ValueRange' :\n        'RangeRange';\n}\n\nfunction barZeroValue(data, dAccessor, scaleType) {\n  switch (scaleType) {\n    // number bars go from zero to value\n    case 'number': return 0;\n    // time values need a \"zero\" value to stretch from - the first date minus one day\n    // todo make this less arbitrary? should be a rare case anyway.\n    case 'time': return d3.extent(data, dAccessor)[0] - (24 * 60 * 60 * 1000);\n    // ordinal values need a \"zero\" value to stretch from -\n    // empty string since it's unlikely to be used in real data and won't show a label\n    case 'ordinal': return '';\n  }\n}\n\nfunction valueAxisDomain(data, dAccessor, scaleType) {\n  switch (scaleType) {\n    case 'number':\n    case 'time':\n      return d3.extent(d3.extent(data, dAccessor).concat(barZeroValue(data, dAccessor, scaleType)));\n    case 'ordinal':\n      return _.uniq([barZeroValue(data, dAccessor, scaleType)].concat(data.map(accessor(dAccessor))));\n  }\n  return null;\n}\n\nfunction rangeAxisDomain(data, rangeStartAccessor, rangeEndAccessor, scaleType) {\n  switch(scaleType) {\n    case 'number':\n    case 'time':\n      return d3.extent(_.flatten([\n        d3.extent(data, (d) => +rangeStartAccessor(d)),\n        d3.extent(data, (d) => +rangeEndAccessor(d))\n      ]));\n    case 'ordinal':\n      return _.uniq(_.flatten([data.map(rangeStartAccessor), data.map(rangeEndAccessor)]));\n  }\n  return [];\n}\n\nconst BarChart = React.createClass({\n  mixins: [InterfaceMixin('XYChart')],\n  propTypes: {\n    // the array of data objects\n    data: PropTypes.array.isRequired,\n    // accessor for X & Y coordinates\n    getValue: PropTypes.object,\n    getEndValue: PropTypes.object,\n    getX: AccessorPropType,\n    getY: AccessorPropType,\n    getXEnd: AccessorPropType,\n    getYEnd: AccessorPropType,\n    // allow user to pass an accessor for setting the class of a bar\n    getClass: AccessorPropType,\n    // thickness of value bars, in pixels, (ignored for RangeValue and RangeRange charts)\n    barThickness: PropTypes.number,\n\n    name: PropTypes.string,\n\n    // x & y scale types\n    scaleType: PropTypes.object,\n    scale: PropTypes.object,\n\n    orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n\n    onMouseEnterBar: PropTypes.func, // A mouse walks into a bar.\n    onMouseMoveBar: PropTypes.func,  // He is immediately killed by the bartender,\n    onMouseLeaveBar: PropTypes.func, // who can't risk another \"C\" rating from the health department.\n  },\n  getDefaultProps() {\n    return {\n      barThickness: 10,\n      orientation: 'vertical',\n      getValue: {},\n      getEndValue: {}\n    }\n  },\n\n  statics: {\n\n    getOptions(props) {\n      // todo getDomain, getSpacing\n      const {data, scaleType, getValue, getEndValue, orientation, barThickness} = props;\n      const [xAccessor, yAccessor] = [accessor(getValue.x), accessor(getValue.y)];\n      const barType = getBarChartType(props);\n      const isVertical = (orientation === 'vertical');\n\n      const accessors = {x: xAccessor, y: yAccessor};\n      const rangeEndAccessors = {x: accessor(getEndValue.x), y: accessor(getEndValue.y)};\n\n      let options = {domain: {}, spacing: null};\n\n      if(barType === 'ValueValue') {\n        let valueAxis = isVertical ? 'y' : 'x'; // axis along which the bar's length shows value\n        options.domain[valueAxis] = valueAxisDomain(data, accessors[valueAxis], scaleType[valueAxis]);\n        // the value, and therefore the center of the bar, may fall exactly on the axis min or max,\n        // therefore bars need (0.5*barThickness) spacing so they don't hang over the edge of the chart\n        const halfBar = Math.ceil(0.5 * barThickness);\n        options.spacing = isVertical ? {left: halfBar, right: halfBar} : {top: halfBar, bottom: halfBar};\n\n      } else if(barType === 'RangeValue') {\n        // rangeAxis: axis along which the bar's length shows value\n        // valueAxis: axis along which the bar's thickness shows range\n        let [rangeAxis, valueAxis] = isVertical ? ['x', 'y'] : ['y', 'x'];\n        options.domain[valueAxis] = valueAxisDomain(data, accessors[valueAxis], scaleType[valueAxis]);\n        options.domain[rangeAxis] =\n          rangeAxisDomain(data, accessors[rangeAxis], rangeEndAccessors[rangeAxis], scaleType[rangeAxis]);\n        // no spacing necessary since bars are drawn *between* values, not on them.\n      }\n      return options;\n    }\n  },\n  getHovered() {},\n\n\n  onMouseEnterBar(e, d) {\n    this.props.onMouseEnterBar(e, d);\n  },\n  onMouseMoveBar(e, d) {\n    this.props.onMouseMoveBar(e, d);\n  },\n  onMouseLeaveBar(e, d) {\n    this.props.onMouseLeaveBar(e, d);\n  },\n\n  render() {\n    // const renderer = this[`render${getBarChartType(this.props)}Bars`];\n    const renderer = this.renderValueValueBars;\n    return <g className={`bar-chart ${this.props.name || ''}`}>\n      {renderer()}\n    </g>\n  },\n  renderValueValueBars() {\n    // typical bar chart, plotting values that look like [[0,5], [1,3], ...]\n    // ie. both independent and dependent variables are single values\n    const {data, scale, getValue, scaleType, getClass, barThickness, orientation} = this.props;\n    const [xAccessor, yAccessor, classAccessor] = [getValue.x, getValue.y, getClass].map(accessor);\n    const isVertical = (this.props.orientation === 'vertical');\n\n    return <g>\n      {data.map((d, i) => {\n        const [onMouseEnter, onMouseMove, onMouseLeave] =\n          ['onMouseEnterBar', 'onMouseMoveBar', 'onMouseLeaveBar'].map(eventName => {\n            // partially apply this bar's data point as 2nd callback argument\n            const callback = methodIfFuncProp(eventName, this.props, this);\n            return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n          });\n\n        // essentially the same process, whether horizontal or vertical bars\n        const [valueScale, valueScaleType, valueAccessor] = isVertical ?\n          [scale.y, scaleType.y, yAccessor] : [scale.x, scaleType.x, xAccessor];\n        const barZero = barZeroValue(data, valueAccessor, valueScaleType);\n        const value = valueAccessor(d);\n        const barLength = Math.abs(valueScale(barZero) - valueScale(value));\n        const className = `chart-bar chart-bar-${orientation} ${getClass ? classAccessor(d) : ''}`;\n        const x = isVertical ? scale.x(xAccessor(d)) - (barThickness / 2) :\n          (value >= 0 || scaleType.x === 'ordinal') ? scale.x(barZero) : scale.x(barZero) - barLength;\n        const y = !isVertical ? scale.y(yAccessor(d)) - (barThickness / 2) :\n          (value >= 0 || scaleType.y === 'ordinal') ? scale.y(barZero) - barLength : scale.y(barZero);\n        const [width, height] = isVertical ? [barThickness, barLength] : [barLength, barThickness];\n        const key = `chart-bar-${i}`;\n\n        if(!_.every([x, y, width, height], _.isFinite)) return null;\n        return <rect {...{className, key, x, y, width, height, onMouseEnter, onMouseMove, onMouseLeave}} />\n      })}\n    </g>;\n  },\n  renderRangeValueBars() {\n    const {data, scale, getValue, getEndValue, scaleType, getClass, orientation} = this.props;\n    const [xAccessor, xEndAccessor, yAccessor, yEndAccessor, classAccessor] =\n      _.map([getValue.x, getEndValue.x, getValue.y, getEndValue.y, getClass], accessor);\n\n    return orientation === 'vertical' ?\n      <g>\n        {this.props.data.map((d, i) => {\n          const [onMouseEnter, onMouseMove, onMouseLeave] =\n            ['onMouseEnterBar', 'onMouseMoveBar', 'onMouseLeaveBar'].map(eventName => {\n              // partially apply this bar's data point as 2nd callback argument\n              const callback = methodIfFuncProp(eventName, this.props, this);\n              return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n            });\n\n          const barZero = barZeroValue(data, yAccessor, scaleType.y);\n          const yVal = yAccessor(d);\n          const barLength = Math.abs(scale.y(barZero) - scale.y(yVal));\n          const barY = (yVal >= 0 || scaleType.y === 'ordinal') ?\n          scale.y(barZero) - barLength : scale.y(barZero);\n          const barX = Math.round(scale.x(xAccessor(d)));\n          const barThickness = Math.round(scale.x(xEndAccessor(d))) - barX;\n          const className = `chart-bar chart-bar-${orientation} ${getClass ? classAccessor(d) : ''}`;\n          const key = `chart-bar-${i}`;\n          if(!_.every([barX, barY, barThickness, barLength], _.isFinite)) return null;\n\n          return <rect\n            x={barX}\n            y={barY}\n            width={barThickness}\n            height={barLength}\n            {...{className, key, onMouseEnter, onMouseMove, onMouseLeave}}\n          />\n        })}\n      </g> :\n      <g>\n        {this.props.data.map((d, i) => {\n          const [onMouseEnter, onMouseMove, onMouseLeave] =\n            ['onMouseEnterBar', 'onMouseMoveBar', 'onMouseLeaveBar'].map(eventName => {\n              // partially apply this bar's data point as 2nd callback argument\n              const callback = methodIfFuncProp(eventName, this.props, this);\n              return _.isFunction(callback) ? _.partial(callback, _, d) : null;\n            });\n\n          const barZero = barZeroValue(data, xAccessor, scaleType.x);\n          const xVal = xAccessor(d);\n          const barLength = Math.abs(scale.x(barZero) - scale.x(xVal));\n          const barX = (xVal >= 0 || scaleType.x === 'ordinal') ?\n            scale.x(barZero) : scale.x(barZero) - barLength;\n          const barY = Math.round(scale.y(yEndAccessor(d)));\n          const barThickness = Math.round(scale.y(yAccessor(d))) - barY;\n          const className = `chart-bar chart-bar-${orientation} ${getClass ? classAccessor(d) : ''}`;\n          const key = `chart-bar-${i}`;\n          if(!_.every([barX, barY, barThickness, barLength], _.isFinite)) return null;\n\n          return <rect\n            x={barX}\n            y={barY}\n            width={barLength}\n            height={barThickness}\n            {...{className, key, onMouseEnter, onMouseMove, onMouseLeave}}\n          />\n        })}\n      </g>\n\n  },\n  renderValueRangeBars() {\n    return renderNotImplemented();\n  },\n  renderRangeRangeBars() {\n    return renderNotImplemented();\n  }\n});\n\nfunction renderNotImplemented(text=\"not implemented yet\") {\n  return <svg x={100} y={100} style={{overflow:'visible'}}><text>{text}</text></svg>\n}\n\nexport default BarChart;\n"]}