{"version":3,"sources":["../../src/old/XYPlot.js"],"names":["d3","CustomPropTypes","xyObjectOf","type","oneOfType","shape","x","y","axisType","oneOf","dataArray","arrayOf","number","string","instanceOf","Date","fourDirections","top","bottom","left","right","stringFormatter","func","XYPlot","createClass","propTypes","width","isRequired","height","margin","padding","spacing","scaleType","domain","nice","bool","invertAxis","axisPosition","tickCount","ticks","tickLength","labelValues","labelFormat","labelPadding","emptyLabel","showLabels","showGrid","showTicks","showZero","axisLabel","axisLabelAlign","horizontal","vertical","axisLabelPadding","onMouseMove","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","onMouseEnterLabel","onMouseMoveLabel","onMouseLeaveLabel","getDefaultProps","getInitialState","componentWillMount","trueProps","initProps","props","initLabelFormats","componentWillReceiveProps","newProps","assign","initDomains","domains","spacings","fromPairs","map","k","isObject","has","undefined","initScale","origMargin","origPadding","shouldMeasureLabels","defaults","scaleWidth","scaleHeight","labelBoxes","scale","isDone","i","limit","range","forEach","makeScale","reverse","measureAxisLabels","getXAxisProps","getYAxisProps","getXAxisLabelProps","getYAxisLabelProps","reduce","newPadding","transform","result","space","dir","Math","max","hasXAxisLabel","xAxis","hasYAxisLabel","yAxis","hasXValLabels","xVal","length","hasYValLabels","yVal","xRange","yRange","min","topYTick","bottomYTick","abs","topYTickFromTop","bottomYTickFromBottom","topYValBox","bottomYValBox","ceil","topYValOverhang","bottomYValOverhang","leftXTick","rightXTick","leftXTickFromLeft","rightXTickFromRight","leftXValBox","rightXValBox","leftXValOverhang","rightXValOverhang","xAxisLabelOuterHeight","yAxisLabelOuterHeight","topMargin","yTickAndPadSpace","maxYValWidth","yAxisLabelOuterWidth","leftMargin","xTickAndPadSpace","maxXValHeight","requiredMargin","newMargin","v","value","every","keys","e","chartBB","currentTarget","getBoundingClientRect","chartX","round","clientX","chartY","clientY","chartXVal","inRange","indexOfClosestNumberInList","invert","chartYVal","chart","refs","hovered","isFunction","getHovered","d","render","children","invertScale","chartWidth","chartHeight","propsToPass","plotWidth","plotHeight","chartMargin","chartPadding","childrenUnderAxes","Children","child","underAxes","name","cloneElement","ref","childrenAboveAxes","options","getAxisProps","letter","orientation","axisTransform","get","labels","getAxisLabelProps","label","alignment","valueLabelPadding","labelBox","XGrid","array","GridLine","gridLength","className","x2","y2","XAxisLabel","object","textAnchor","style","YAxisLabel","ChartAxis","isArray","distance","tickTransform","labelOffset","tickOptions","bind","renderGrid","renderTick","renderLabel","renderZero","formatAxisLabel","closestNumberInList","list","closest","current","closestI","childIsXYChart","implementsInterface","isNullOrUndefined","isNull","isUndefined","isNice","defaultDomain","flatten","rangePoints","data","getter","extent","uniq","linear","ordinal","time","format","xProps","yProps","xAxisLabelProps","yAxisLabelProps","xAxisHtml","renderToStaticMarkup","yAxisHtml","xLabelHtml","yLabelHtml","testSvg","document","createElement","innerHTML","body","appendChild","getRect","el","querySelectorAll","removeChild","xyKeys","dirKeys","XYPlotResolved","flow","partial"],"mappings":"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","file":"XYPlot.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport * as d3 from 'd3';\nimport {accessor} from '../util.js';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport ReactDOMServer from 'react-dom/server';\nimport resolveObjectProps from '../utils/resolveObjectProps';\nimport resolveXYScales from '../utils/resolveXYScales';\n\nlet CustomPropTypes = {\n    // all props that can apply to both axes take the form {x: val, y: val }\n    xyObjectOf: (type) => PropTypes.oneOfType([type, PropTypes.shape({x: type, y: type})]),\n    axisType: PropTypes.oneOf(['number', 'time', 'ordinal']),\n    dataArray: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)\n    ])),\n    fourDirections: PropTypes.shape({\n        top: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n        right: PropTypes.number\n    }),\n    stringFormatter: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nconst XYPlot = React.createClass({\n    propTypes: {\n        // (outer) width and height of the chart\n        width: PropTypes.number.isRequired,\n        height: PropTypes.number.isRequired,\n\n        // chart margins (space around edges where axis labels live)\n        margin: CustomPropTypes.fourDirections,\n        // internal chart padding (space between scale ends and edge of inner chart background)\n        padding: CustomPropTypes.fourDirections,\n        // the max extra spacing required by the plot elements, if they were on the edge of the chart\n        // eg. if a 10px radius dot is plotted at the end of one axis,\n        // it needs 10px of spacing so it doesn't hang over the edge of the chart\n        // spacing is the max possible necessary padding, and will == padding if plot elements are on scale extrema\n        spacing: CustomPropTypes.fourDirections,\n\n        // axis types - number, time or ordinal\n        scaleType: CustomPropTypes.xyObjectOf(PropTypes.scaleType),\n        // scale domains may be provided, otherwise will be inferred from data\n        domain: CustomPropTypes.xyObjectOf(CustomPropTypes.dataArray),\n        // whether or not to extend the scales to end on nice values (see docs for d3 scale.linear.nice())\n        nice: CustomPropTypes.xyObjectOf(PropTypes.bool),\n        // whether or not to invert the axis (ie. put largest numbers on bottom for Y axis, or on left for X)\n        invertAxis: CustomPropTypes.xyObjectOf(PropTypes.bool),\n        // placement of the axis labels/ticks on the chart\n        axisPosition: PropTypes.shape({\n            x: PropTypes.oneOf(['top', 'bottom']),\n            y: PropTypes.oneOf(['left', 'right'])\n        }),\n\n        // approximate # of ticks to include on each axis - 10 is default\n        // (actual # may be slightly different, to get nicest intervals)\n        tickCount: CustomPropTypes.xyObjectOf(PropTypes.number),\n        // or alternatively, you can pass an array of the exact tick values to use on each axis\n        ticks: CustomPropTypes.xyObjectOf(CustomPropTypes.dataArray),\n        // size of axis ticks\n        tickLength: CustomPropTypes.xyObjectOf(PropTypes.number),\n\n        // axis value labels will be created for each tick, unless you specify a different list of values to label\n        labelValues: CustomPropTypes.xyObjectOf(CustomPropTypes.dataArray),\n        // format to use for the axis value labels. can be a function or a string.\n        // if function, called on each label.\n        // if string, interpreted as momentjs formats for time axes, or numeraljs formats for number axes\n        labelFormat: CustomPropTypes.xyObjectOf(CustomPropTypes.stringFormatter),\n        // padding between axis value labels and the axis/ticks\n        labelPadding: CustomPropTypes.xyObjectOf(PropTypes.number),\n        // label to show for null/undefined values\n        emptyLabel: PropTypes.string,\n\n        // should we draw axis value labels\n        showLabels: CustomPropTypes.xyObjectOf(PropTypes.bool),\n        // should we draw the grid lines in the main chart space\n        showGrid: CustomPropTypes.xyObjectOf(PropTypes.bool),\n        // should we draw the little tick lines along the axis\n        showTicks: CustomPropTypes.xyObjectOf(PropTypes.bool),\n        // should we draw a line showing where zero is\n        showZero: CustomPropTypes.xyObjectOf(PropTypes.bool),\n\n        // label for entire axis, not value labels\n        axisLabel: CustomPropTypes.xyObjectOf(PropTypes.string),\n        axisLabelAlign: CustomPropTypes.xyObjectOf(PropTypes.shape({\n            horizontal: PropTypes.oneOf(['left', 'center', 'right']),\n            vertical: PropTypes.oneOf(['top', 'bottom'])\n        })),\n        axisLabelPadding: CustomPropTypes.xyObjectOf(PropTypes.number),\n\n        // todo more interaction\n        onMouseMove: PropTypes.func,\n        onMouseEnter: PropTypes.func,\n        onMouseLeave: PropTypes.func,\n        onMouseDown: PropTypes.func,\n        onMouseUp: PropTypes.func,\n\n        // todo: minMargin - margin will be at least X, or more if necessary\n        // todo: extraMargin - margin to add to calculated necessary margin\n        // todo: minPadding, extraPadding ?\n        // todo: minSpacing, extraSpacing ?\n\n        // Label Handling\n        onMouseEnterLabel: PropTypes.func,\n        onMouseMoveLabel: PropTypes.func,\n        onMouseLeaveLabel: PropTypes.func\n    },\n    getDefaultProps() {\n        return {\n            width: 400,\n            height: 250,\n            axisType: {x: 'number', y: 'number'},\n            nice: {x: true, y: true},\n            invertAxis: {x: false, y: false},\n            tickCount: {x: 10, y: 10},\n            tickLength: {x: 6, y: 6},\n            labelPadding: {x: 6, y: 6},\n            emptyLabel: \"Unknown\",\n            showLabels: {x: true, y: true},\n            showGrid: {x: true, y: true},\n            showTicks: {x: true, y: true},\n            showZero: {x: false, y: false},\n            axisLabelPadding: {x: 10, y: 10},\n            axisLabelAlign: {\n                x: {horizontal: 'left', vertical: 'top'},\n                y: {horizontal: 'right', vertical: 'top'}\n            },\n\n            // these values are inferred from data if not provided, therefore empty defaults\n            margin: {}, padding: {}, spacing: {}, domain: {},\n            ticks: {}, labelValues: {}, labelFormat: {}, axisLabel: {}\n        };\n    },\n    getInitialState() {\n        return {};\n    },\n\n    componentWillMount() {\n        this.trueProps = this.initProps(this.props);\n        this.initLabelFormats(this.trueProps);\n        //this.initDomains(this.trueProps);\n        //this.initScale(this.trueProps);\n    },\n    componentWillReceiveProps(newProps) {\n        this.trueProps = this.initProps(newProps);\n        this.initLabelFormats(this.trueProps);\n        //this.initDomains(this.trueProps);\n        //this.initScale(this.trueProps);\n    },\n\n    initProps(props) {\n        return _.assign({}, props);\n    },\n\n    initDomains(props) {\n        const {axisType, ticks, labelValues} = props;\n\n        _.assign(this, {domains: props.domain, spacings: {}});\n\n        //// figure out the domains for each axis (ie. data extents)\n        //// unless both domains are given, ask each child chart for it's desired domain, & flatten them into one domain.\n        //// this is so that charts can plot their own modified version of the data (ie. a histogram),\n        //// even if it has a different domain than the original data\n        //// todo: only do this when necessary\n        //let allChartOptions = [];\n        //React.Children.forEach(props.children, child => {\n        //    if(!childIsXYChart(child)) return; // only get options for children which identify themselves as XYCharts\n        //\n        //    const childProps = _.assign({}, {axisType}, child.props);\n        //    let {domain, spacing} = _.isFunction(child.type.getOptions) ? child.type.getOptions(childProps) : {};\n        //    domain = domain || {};\n        //    ['x','y'].forEach(k => {\n        //        if(isNullOrUndefined(domain[k]))\n        //            domain[k] = defaultDomain(child.props.data, child.props.getValue[k], axisType[k]);\n        //    });\n        //\n        //    allChartOptions.push({domain, spacing});\n        //});\n        //\n        //// use domain from props if provided, else calculated domains from children\n        //let domains = _.fromPairs(_.map(['x','y'], k => {\n        //    return [k, props.domain[k] || _.compact(_.map(allChartOptions, `domain.${k}`))]\n        //}));\n        //// if user has passed in custom ticks or label values, extend the domain to ensure they are all are included\n        //['x','y'].forEach(k => {\n        //    const isOrdinal = axisType[k] === 'ordinal';\n        //    [ticks[k], labelValues[k]].forEach(values => {\n        //        if(values) domains[k].push(isOrdinal ? values : d3.extent(values));\n        //    });\n        //});\n        //// use spacing from props if provided, else calculated spacings from children\n        //const spacings = _.map(allChartOptions, 'spacing').map(spacing => {\n        //    return _.defaults({}, spacing, props.spacing);\n        //});\n        //\n        //_.assign(this, {domains, spacings});\n\n\n    },\n    initLabelFormats(props) {\n        this.labelFormat = _.fromPairs(_.map(['x', 'y'], k => {\n            const axisType = props.axisType[k];\n            // use given format if provided\n            return (_.isObject(props.labelFormat) && _.has(props.labelFormat, k)) ? [k, props.labelFormat[k]] :\n                // otherwise determine appropriate format for axis type\n                (axisType == 'number') ? [k, '0.[000000]a'] :\n                // todo determine most appropriate date format for this domain\n                (axisType === 'time') ? [k, 'MM-DD'] : [k, undefined];\n        }));\n    },\n\n    initScale(props) {\n        // create the X and Y scales shared by charts\n        // calculate the inner width and height based on margins\n        const {\n            width, height, axisType, tickCount, nice,\n            axisLabel, axisLabelPadding, labelPadding, tickLength, showTicks\n        } = props;\n        const {domains, spacings, labelFormat} = this;\n        const origMargin = props.margin;\n        const origPadding = props.padding;\n\n        // todo fix\n        const shouldMeasureLabels = true;\n        if(shouldMeasureLabels) {\n            // several inferred variables depend on each other in a complicated/circular way:\n            // the axis scales, margin, padding, ticks and labels.\n            // eg. scale width depends on margin, which depends on the axis labels, which depend on the scale\n            // so we set some sane initial values and iterate until it settles down (or we get tired of waiting)\n\n            // start with a margin of 10 pixels for all unknown margins\n            //let margin = _.transform(origMargin, (result, m, key) => result[key] = isNullOrUndefined(m) ? 10 : m);\n            let margin = _.defaults({}, origMargin, {top: 10, bottom: 10, left: 10, right: 10});\n            // and padding equal to the first chart's spacing for unknown paddings\n            //let padding = _.transform(origPadding, (res, p, key) => res[key] = _.isNull(p) ? spacings[0][key] : p);\n            let padding = _.defaults({}, origPadding, {top: 0, bottom: 0, left: 0, right: 0});\n            // make scales using margin, measure labels, make new margins\n            // repeat until we converge on a margin that works\n            let scaleWidth, scaleHeight, labelBoxes;\n            let scale = {};\n            let ticks = {};\n\n            let isDone = false, i = 0, limit = 5; // don't loop forever\n            while(!isDone && i < limit) {\n                i++;\n                // calculate scale width based on previous margin\n                scaleWidth = width - (margin.left + margin.right + padding.left + padding.right);\n                scaleHeight = height - (margin.top + margin.bottom + padding.top + padding.bottom);\n                const range = {\n                    x: [padding.left, scaleWidth + padding.left],\n                    y: [scaleHeight + padding.top, padding.top]\n                };\n\n                ['x', 'y'].forEach(k => {\n                    scale[k] = makeScale(domains[k], range[k], axisType[k], nice[k], tickCount[k]);\n                    if(props.invertAxis[k]) scale[k].domain(scale[k].domain().reverse());\n                    ticks[k] = props.ticks[k] ||\n                        ((axisType[k] === 'ordinal') ? scale[k].domain() : scale[k].ticks(tickCount[k]));\n                });\n\n                labelBoxes = measureAxisLabels(\n                    this.getXAxisProps({scaleWidth, scaleHeight, scale: scale.x, ticks: ticks.x}),\n                    this.getYAxisProps({scaleWidth, scaleHeight, scale: scale.y, ticks: ticks.y}),\n                    axisLabel.x ? this.getXAxisLabelProps({margin}) : null,\n                    axisLabel.y ? this.getYAxisLabelProps({margin}) : null\n                );\n\n                // calculate padding based on spacings and domains\n                // spacing is the amount of outer space ('margin') required by the outermost elements of each chart,\n                // so that they still fit within the chart boundaries, defined by chartWidth and chartHeight.\n                // padding is the actual amount of extra space required, after taking into account the scales.\n                // if the outermost chart elements are on the scale extrema, padding = spacing,\n                // but the scale may extend beyond the last element anyway, so we may not need the extra padding.\n                // NOTE: temporarily set as padding = max spacing, todo: implement real padding\n                padding = _.defaults(origPadding, _.reduce(spacings, (newPadding, spacing) => {\n                    return _.transform(spacing, (result, space, dir) => {\n                        result[dir] = Math.max(newPadding[dir] || space);\n                    });\n                }, {}), {top: 0, bottom: 0, left: 0, right: 0});\n\n\n                // todo: modify to handle all possible label alignments\n                // todo: handle case of labels not shown (ie if !this.props.showYLabels)\n                const hasXAxisLabel = axisLabel.x && labelBoxes.xAxis;\n                const hasYAxisLabel = axisLabel.y && labelBoxes.yAxis;\n                const hasXValLabels = !!labelBoxes.xVal.length;\n                const hasYValLabels = !!labelBoxes.yVal.length;\n\n                const [xRange, yRange] = [scale.x.range(), scale.y.range()];\n\n                // find # of pixels by which the top- and bottom-most y axis labels overhang the top/bottom chart edges\n                const [topYTick, bottomYTick] = [_.min(ticks.y, scale.y), _.max(ticks.y, scale.y)];\n                const [topYTickFromTop, bottomYTickFromBottom] =\n                    [Math.abs(scale.y(topYTick) - _.min(yRange)), Math.abs(scale.y(bottomYTick) - _.max(yRange))];\n                const [topYValBox, bottomYValBox] = hasYValLabels ?\n                    [_.min(labelBoxes.yVal, accessor('top')), _.max(labelBoxes.yVal, accessor('top'))] : [null, null];\n                const [topYValOverhang, bottomYValOverhang] = hasYValLabels ? [\n                    Math.ceil(Math.max((0.5 * topYValBox.height) - (topYTickFromTop + padding.top), 0)),\n                    Math.ceil(Math.max((0.5 * bottomYValBox.height) - (bottomYTickFromBottom + padding.bottom), 0))\n                ] : [0, 0];\n\n                // find # of pixels by which the left- and right-most x axis labels overhang the left/right chart edges\n                const [leftXTick, rightXTick] = [_.min(ticks.x, scale.x), _.max(ticks.x, scale.x)];\n                const [leftXTickFromLeft, rightXTickFromRight] =\n                    [Math.abs(scale.x(leftXTick) - _.min(xRange)), Math.abs(scale.x(rightXTick) - _.max(xRange))];\n                const [leftXValBox, rightXValBox] = hasXValLabels ?\n                    [_.min(labelBoxes.xVal, accessor('left')), _.max(labelBoxes.xVal, accessor('right'))] : [null, null];\n                const [leftXValOverhang, rightXValOverhang] = hasXValLabels ? [\n                    Math.ceil(Math.max((0.5 * leftXValBox.width) - (leftXTickFromLeft + padding.left), 0)),\n                    Math.ceil(Math.max((0.5 * rightXValBox.width) - (rightXTickFromRight + padding.right), 0))\n                ] : [0, 0];\n\n\n\n                // todo: fix all of this... sigh...\n                //\n                const xAxisLabelOuterHeight = hasXAxisLabel ? Math.ceil(labelBoxes.xAxis.height + axisLabelPadding.x) : 0;\n                const yAxisLabelOuterHeight = hasYAxisLabel ? Math.ceil(labelBoxes.yAxis.height + axisLabelPadding.y) : 0;\n\n                const topMargin = _.has(origMargin, 'top') ?\n                    origMargin.top : Math.max(topYValOverhang, xAxisLabelOuterHeight, yAxisLabelOuterHeight);\n\n                const yTickAndPadSpace =\n                    ((hasYValLabels || hasYAxisLabel) ? labelPadding.y : 0) + (showTicks.y ? tickLength.y : 0);\n\n                const maxYValWidth =\n                    (hasYValLabels ? Math.ceil(d3.max(labelBoxes.yVal, accessor('width'))) : 0) + yTickAndPadSpace;\n                const yAxisLabelOuterWidth = hasYAxisLabel ? Math.ceil(labelBoxes.yAxis.width) + yTickAndPadSpace : 0;\n                //console.log(maxYValWidth, yAxisLabelOuterWidth);\n\n                const leftMargin =  _.has(origMargin, 'left') ?\n                    origMargin.left : Math.max(leftXValOverhang, maxYValWidth, yAxisLabelOuterWidth);\n\n                const xTickAndPadSpace =\n                    ((hasXValLabels || hasXAxisLabel) ? labelPadding.x : 0) + (showTicks.x ? tickLength.x : 0);\n\n                const maxXValHeight =\n                    (hasXValLabels ? Math.ceil(d3.max(labelBoxes.xVal, accessor('height'))) : 0) + xTickAndPadSpace;\n\n\n                let requiredMargin = {\n                    top: topMargin,\n                    bottom: maxXValHeight,\n                    left: leftMargin,\n                    right: rightXValOverhang\n                };\n\n                let newMargin = _(requiredMargin)\n                    .map((v,k) => [k, _.has(origMargin, k) ? origMargin[k] : v])\n                    .fromPairs()\n                    .value();\n\n                isDone = _.every(_.keys(margin), k => margin[k] === newMargin[k]);\n                //console.log('calculated margin', newMargin);\n                margin = newMargin;\n                scaleWidth = width - (margin.left + margin.right + padding.left + padding.right);\n                scaleHeight = height - (margin.top + margin.bottom + padding.top + padding.bottom);\n            }\n            //console.log('padding', padding);\n            //console.log({scaleWidth, scaleHeight});\n            _.assign(this, {scale, ticks, margin, padding, scaleWidth, scaleHeight, labelBoxes});\n        } else {\n            // margins are all pre-defined, just make the scales\n            // todo still need to determine padding??\n            //const scaleWidth = width - (props.margin.left + props.margin.right);\n            //const scaleHeight = height - (props.margin.top + props.margin.bottom);\n            //const xScale = makeScale(this.xDomains, [0, scaleWidth], xType);\n            //const yScale = makeScale(this.yDomains, [scaleHeight, 0], yType);\n            //_.assign(this, {margin: props.margin, scaleWidth, scaleHeight, xScale, yScale});\n        }\n    },\n\n    onMouseMove(e) {\n        const {axisType, height, width} = this.trueProps;\n        const {margin, padding, scale, scaleWidth, scaleHeight} = this;\n        // todo faster method than getBoundingClientRect on every mouseover?\n        const chartBB = e.currentTarget.getBoundingClientRect();\n        const chartX = Math.round((e.clientX - chartBB.left) - margin.left);\n        const chartY = Math.round((e.clientY - chartBB.top) - margin.top);\n\n        const chartXVal = (!_.inRange(chartX, 0, scaleWidth + padding.left + padding.right)) ? null :\n            (axisType.x === 'ordinal') ?\n                scale.x.domain()[indexOfClosestNumberInList(chartX, scale.x.range())] :\n                scale.x.invert(chartX);\n        const chartYVal = (!_.inRange(chartY, 0, scaleHeight + padding.top + padding.bottom)) ? null :\n            (axisType.y === 'ordinal') ?\n                scale.y.domain()[indexOfClosestNumberInList(chartY, scale.y.range())] :\n                scale.y.invert(chartY);\n\n        const chart = this.refs['chart-series-0'];\n        const hovered = (chart && _.isFunction(chart.getHovered)) ? chart.getHovered(chartXVal) : null;\n\n        this.trueProps.onMouseMove(hovered, e, {chartX, chartY, chartXVal, chartYVal});\n    },\n    onMouseEnter(e) {\n        this.trueProps.onMouseEnter(e);\n    },\n    onMouseLeave(e) {\n        this.trueProps.onMouseLeave(e);\n    },\n    onMouseDown(e) {\n        this.trueProps.onMouseDown(e);\n    },\n    onMouseUp(e) {\n        this.trueProps.onMouseUp(e);\n    },\n\n\n    onMouseEnterLabel(e, d) {\n        this.trueProps.onMouseEnterLabel(e, d);\n    },\n    onMouseMoveLabel(e, d) {\n        this.trueProps.onMouseMoveLabel(e, d);\n    },\n    onMouseLeaveLabel(e, d) {\n        this.trueProps.onMouseLeaveLabel(e, d);\n    },\n\n    render() {\n        const {\n            children, width, height, scaleType, axisLabel, invertScale,\n            onMouseMove, onMouseEnter, onMouseLeave, onMouseDown, onMouseUp,\n            scale, margin, padding\n        } = this.trueProps;\n        const scaleWidth = width - (margin.left + margin.right);\n        const scaleHeight = width - (margin.top + margin.bottom);\n        const ticks = [];\n        //const {scale, margin, padding, scaleWidth, scaleHeight, ticks} = this;\n        const chartWidth = scaleWidth + padding.left + padding.right;\n        const chartHeight = scaleHeight + padding.top + padding.bottom;\n\n        const propsToPass = {\n            scaleType, invertScale, scale, scaleWidth, scaleHeight, plotWidth: width, plotHeight: height,\n            chartMargin: margin, chartPadding: padding, margin, padding, ticks\n        };\n\n        const childrenUnderAxes = React.Children.map(children, (child, i) => {\n            if(!child || !child.props || !child.props.underAxes) return null;\n            // todo fix chart series #\n            const name = child.props.name || 'chart-series-' + i;\n            return React.cloneElement(child, _.assign({ref: name, name}, propsToPass));\n        });\n        const childrenAboveAxes = React.Children.map(children, (child, i) => {\n            if(!child || (child.props && child.props.underAxes)) return null;\n            const name = child.props.name || 'chart-series-' + i;\n            return React.cloneElement(child, _.assign({ref: name, name}, propsToPass));\n        });\n\n        return (\n            <svg className=\"xy-plot\" {...{width, height}}\n                 onMouseMove={_.isFunction(onMouseMove) ? this.onMouseMove : null}\n                 onMouseEnter={_.isFunction(onMouseEnter) ? this.onMouseEnter : null}\n                 onMouseLeave={_.isFunction(onMouseLeave) ? this.onMouseLeave : null}\n                 onMouseDown={_.isFunction(onMouseDown) ? this.onMouseDown : null}\n                 onMouseUp={_.isFunction(onMouseUp) ? this.onMouseUp : null}\n            >\n                <g className=\"chart-inner\"\n                   transform={`translate(${margin.left}, ${margin.top})`}\n                >\n                    <rect className=\"chart-background\" width={chartWidth} height={chartHeight} />\n\n                    {childrenUnderAxes}\n\n                    <ChartAxis\n                        onMouseEnterLabel={_.isFunction(onMouseEnterLabel) ? this.onMouseEnterLabel : null}\n                        onMouseMoveLabel={_.isFunction(onMouseMoveLabel) ? this.onMouseMoveLabel : null}\n                        onMouseLeaveLabel={_.isFunction(onMouseLeaveLabel) ? this.onMouseLeaveLabel : null}\n                        {...this.getXAxisProps()} />\n                    <ChartAxis\n                        onMouseEnterLabel={_.isFunction(onMouseEnterLabel) ? this.onMouseEnterLabel : null}\n                        onMouseMoveLabel={_.isFunction(onMouseMoveLabel) ? this.onMouseMoveLabel : null}\n                        onMouseLeaveLabel={_.isFunction(onMouseLeaveLabel) ? this.onMouseLeaveLabel : null}\n                        {...this.getYAxisProps()} />\n\n                    {childrenAboveAxes}\n                </g>\n\n                {axisLabel.x ?\n                    <XAxisLabel {...this.getXAxisLabelProps()} />\n                    : null\n                }\n                {axisLabel.y ?\n                    <YAxisLabel {...this.getYAxisLabelProps()} />\n                    : null\n                }\n            </svg>\n        );\n    },\n\n    getXAxisProps(options={}) {\n        const scaleHeight = options.scaleHeight || this.scaleHeight;\n        const padding = options.padding || this.padding || {};\n        return this.getAxisProps(_.assign({\n            letter: 'x',\n            orientation: 'horizontal',\n            axisTransform: `translate(0, ${scaleHeight + (padding.top || 0) + (padding.bottom || 0)})`\n        }, options));\n    },\n    getYAxisProps(options={}) {\n        return this.getAxisProps(_.assign({\n            letter: 'y',\n            orientation: 'vertical'\n        }, options));\n    },\n    getAxisProps(options) {\n        const props = this.trueProps;\n        const k = options.letter;\n\n        return _.defaults({}, options, {\n            scale: _.get(this.scale, k),\n            padding: this.padding,\n            scaleHeight: this.scaleHeight,\n            scaleWidth: this.scaleWidth,\n            labelFormat: this.labelFormat[k],\n            type: props.axisType[k],\n            tickCount: props.tickCount[k],\n            ticks: _.get(this.ticks, k) || [],\n            labels: props.labelValues[k],\n            labelPadding: props.labelPadding[k],\n            emptyLabel: props.emptyLabel,\n            tickLength: props.tickLength[k],\n            showLabels: props.showLabels[k],\n            showTicks: props.showTicks[k],\n            showGrid: props.showGrid[k],\n            showZero: props.showZero[k]\n        });\n    },\n\n    getXAxisLabelProps(options={}) {\n        return this.getAxisLabelProps('x', options);\n    },\n    getYAxisLabelProps(options={}) {\n        return this.getAxisLabelProps('y', options);\n    },\n    getAxisLabelProps(k, options={}) {\n        const props = this.trueProps;\n        const {labelBoxes, margin, scaleWidth, scaleHeight} = this;\n\n        return _.defaults({}, options, {\n            margin, scaleWidth, scaleHeight,\n            label: _.get(props.axisLabel, k),\n            alignment: _.get(props.axisLabelAlign, k),\n            axisLabelPadding: _.get(props.axisLabelPadding, k),\n            valueLabelPadding: _.get(props.labelPadding, k),\n            tickLength: _.get(props.tickLength, k),\n            showTicks: _.get(props.showTicks, k),\n            labelBox: (labelBoxes && labelBoxes[`${k}Axis`]) ? labelBoxes[`${k}Axis`] : {width: 10, height: 10}\n        })\n    }\n});\n\nconst XGrid = React.createClass({\n    propTypes: {\n        ticks: PropTypes.array,\n        scale: PropTypes.array,\n        chartWidth: PropTypes.number,\n        chartHeight: PropTypes.number,\n    },\n    render() {\n        const {ticks, scale, chartWidth, chartHeight} = this.props;\n\n        return ticks.map((value, i) => {\n            const x = scale(value);\n\n        })\n    }\n});\n\nconst GridLine = React.createClass({\n    render(options) {\n        const {letter, gridLength, orientation} = options;\n        const className = `chart-grid chart-grid-${letter || ''}`;\n        const [x2, y2] = (orientation === 'vertical') ? [gridLength, 0] : [0, -gridLength];\n        return <line {...{className, x2, y2}} />\n    }\n});\n\nconst XAxisLabel = React.createClass({\n    propTypes: {\n        label: PropTypes.string,\n        //letter: PropTypes.string,\n        margin: PropTypes.object,\n        scaleWidth: PropTypes.number,\n        scaleHeight: PropTypes.number,\n        alignment: PropTypes.shape({\n            horizontal: PropTypes.oneOf(['left', 'center', 'right']),\n            vertical: PropTypes.oneOf(['top', 'bottom'])\n        }),\n        axisLabelPadding: PropTypes.number,\n        valueLabelPadding: PropTypes.number,\n        tickLength: PropTypes.number,\n        // bounding box of the label\n        labelBox: PropTypes.object\n    },\n    getDefaultProps() {\n        return {\n            labelBox: {height: 10, width: 10},\n            scaleWidth: 0\n        }\n    },\n    render() {\n        const {label, labelBox, margin, alignment} = this.props;\n\n        const top = labelBox.height;\n        const left = margin.left;\n        const x =\n            (alignment.horizontal === 'left') ? 0 :\n            (alignment.horizontal === 'right') ? this.props.scaleWidth :\n            this.props.scaleWidth / 2;\n        const textAnchor =\n            (alignment.horizontal === 'left') ? 'start' :\n            (alignment.horizontal === 'right') ? 'end' :\n            'middle';\n\n        // todo implement vertical alignment\n\n        return <g\n            className={`chart-axis-label chart-axis-label-x`}\n            transform={`translate(${left},${top})`}\n            >\n            <text {...{x, style: {textAnchor}}}>{label}</text>\n        </g>\n    }\n});\n\nconst YAxisLabel = React.createClass({\n    propTypes: {\n        label: PropTypes.string,\n        //letter: PropTypes.string,\n        margin: PropTypes.object,\n        scaleWidth: PropTypes.number,\n        scaleHeight: PropTypes.number,\n        alignment: PropTypes.shape({\n            horizontal: PropTypes.oneOf(['left', 'center', 'right']),\n            vertical: PropTypes.oneOf(['top', 'bottom'])\n        }),\n        axisLabelPadding: PropTypes.number,\n        valueLabelPadding: PropTypes.number,\n        tickLength: PropTypes.number,\n        showTicks: PropTypes.bool,\n        // bounding box of the label\n        labelBox: PropTypes.object\n    },\n    getDefaultProps() {\n        return {\n            labelBox: {height: 10, width: 10},\n            scaleWidth: 0\n        }\n    },\n    render() {\n        const {label, labelBox, margin, valueLabelPadding, showTicks, tickLength, alignment} = this.props;\n        const yTickAndPadSpace = valueLabelPadding + (showTicks ? tickLength : 0);\n\n        const top = labelBox.height;\n        const left = 0;\n        const x =\n            (alignment.horizontal === 'left') ? 0 :\n            (alignment.horizontal === 'right') ? margin.left - yTickAndPadSpace :\n            (margin.left - yTickAndPadSpace) / 2;\n        const textAnchor =\n            (alignment.horizontal === 'left') ? 'start' :\n            (alignment.horizontal === 'right') ? 'end' :\n            'middle';\n\n        // todo implement vertical alignment\n\n        return <g\n            className={`chart-axis-label chart-axis-label-y`}\n            transform={`translate(${left},${top})`}\n            >\n            <text {...{x, style: {textAnchor}}}>{label}</text>\n        </g>\n    }\n});\n\nconst ChartAxis = React.createClass({\n    propTypes: {\n        scale: PropTypes.func,\n        type: PropTypes.string,\n        orientation: PropTypes.string,\n        axisTransform: PropTypes.string,\n        ticks: PropTypes.array,\n        labels: PropTypes.array,\n        tickCount: PropTypes.number,\n        labelFormat: CustomPropTypes.stringFormatter,\n        emptyLabel: PropTypes.string,\n        letter: PropTypes.string,\n\n        scaleWidth: PropTypes.number,\n        scaleHeight: PropTypes.number,\n        padding: PropTypes.object,\n        labelPadding: PropTypes.number,\n        tickLength: PropTypes.number,\n        showLabels: PropTypes.bool,\n        showTicks: PropTypes.bool,\n        showGrid: PropTypes.bool,\n        showZero: PropTypes.bool\n    },\n    getDefaultProps() {\n        return {\n            padding: {},\n            emptyLabel: \"Unknown\"\n        }\n    },\n    render() {\n        const {\n            scale, type, orientation, axisTransform, tickCount, letter, labelFormat, emptyLabel, ticks,\n            scaleWidth, scaleHeight, padding, labelPadding, tickLength,\n            showLabels, showTicks, showGrid, showZero,\n            onMouseEnterLabel, onMouseMoveLabel, onMouseLeaveLabel\n        } = this.props;\n\n        if(!(showLabels || showTicks || showGrid || showZero)) return null;\n\n        const labels = _.isArray(this.props.labels) ? this.props.labels : ticks;\n        const distance = (showTicks) ? tickLength + labelPadding : labelPadding;\n        const [tickTransform, labelOffset, gridLength] = (orientation === 'vertical') ?\n            [v => `translate(0, ${scale(v)})`, {x: -distance}, scaleWidth + padding.left + padding.right] :\n            [v => `translate(${scale(v)}, 0)`, {y: distance}, scaleHeight + padding.top + padding.bottom];\n\n        const options = {letter, type, orientation, labelOffset, gridLength, tickLength, labelFormat, emptyLabel};\n\n        return (\n            <g\n                ref={`${letter}Axis`}\n                className={`chart-axis chart-axis-${letter}`}\n                transform={axisTransform}>\n                {showTicks || showGrid || (showLabels && labels === ticks) ?\n                    _.map(ticks, (value, i) => {\n                        const tickOptions = _.assign({}, options, {value});\n                        return (\n                            <g\n                                transform={tickTransform(value)}\n                                key={`tick-${i}`}\n                                onMouseEnter={_.isFunction(onMouseEnterLabel) ? onMouseEnterLabel.bind(null, tickOptions) : null}\n                                onMouseMove={_.isFunction(onMouseMoveLabel) ? onMouseMoveLabel.bind(null, tickOptions) : null}\n                                onMouseLeave={_.isFunction(onMouseLeaveLabel) ? onMouseLeaveLabel.bind(null, tickOptions) : null}>\n                                {showGrid ? this.renderGrid(tickOptions) : null}\n                                {showTicks ? this.renderTick(tickOptions) : null}\n                                {(showLabels && labels === ticks) ? this.renderLabel(tickOptions) : null}\n                            </g>\n                        )\n                    }) : null}\n\n                {(showLabels && labels !== ticks) ? // render custom labels (passed in, not same as ticks)\n                    _.map(labels, (value, i) => {\n                        return (\n                            <g\n                                transform={tickTransform(value)}\n                                key={`tick-${i}`}\n                                onMouseEnter={_.isFunction(onMouseEnterLabel) ? onMouseEnterLabel.bind(null, tickOptions) : null}\n                                onMouseMove={_.isFunction(onMouseMoveLabel) ? onMouseMoveLabel.bind(null, tickOptions) : null}\n                                onMouseLeave={_.isFunction(onMouseLeaveLabel) ? onMouseLeaveLabel.bind(null, tickOptions) : null}>\n                                {this.renderLabel(_.assign({}, options, {value}))}\n                            </g>\n                        )\n                    }) : null}\n\n                {showZero ?\n                    <g\n                        transform={tickTransform(0)}>\n                        {showZero ? this.renderZero(options): null}\n                    </g> : null}\n            </g>);\n    },\n    renderLabel(options) {\n        const {letter, value, type, labelOffset, labelFormat, emptyLabel} = options;\n        const className = `chart-axis-value-label chart-axis-value-label-${letter}`;\n        // todo generalize dy for all text sizes...?\n        return <text {...{className}} dy=\"0.32em\" {...labelOffset}>\n            {formatAxisLabel(value, type, labelFormat, emptyLabel)}\n        </text>\n    },\n    // todo unify into drawLine\n    renderTick(options) {\n        const {letter, tickLength, orientation} = options;\n        const className = `chart-tick chart-tick-${letter}`;\n        const [x2, y2] = (orientation === 'vertical') ? [-tickLength, 0] : [0, tickLength];\n        return <line {...{className, x2, y2}} />\n    },\n    renderGrid(options) {\n        const {letter, gridLength, orientation} = options;\n        const className = `chart-grid chart-grid-${letter}`;\n        const [x2, y2] = (orientation === 'vertical') ? [gridLength, 0] : [0, -gridLength];\n        return <line {...{className, x2, y2}} />\n    },\n    renderZero(options) {\n        const {letter, gridLength, orientation} = options;\n        const className = `chart-zero-line chart-zero-line-${letter}`;\n        const [x2, y2] = (orientation === 'vertical') ? [gridLength, 0] : [0, -gridLength];\n        return <line {...{className, x2, y2}} />\n    }\n});\n\nfunction closestNumberInList(number, list) {\n    return list.reduce((closest, current) => {\n        return Math.abs(current - number) < Math.abs(closest - number) ? current : closest;\n    });\n}\nfunction indexOfClosestNumberInList(number, list) {\n    return list.reduce((closestI, current, i) => {\n        return Math.abs(current - number) < Math.abs(list[closestI] - number) ? i : closestI;\n    }, 0);\n}\n\nfunction childIsXYChart(child) {\n    return !!(child && _.has(child, 'type.implementsInterface') && child.type.implementsInterface('XYChart'));\n}\n\nfunction isNullOrUndefined(d) { return _.isNull(d) || _.isUndefined(d); }\n\nfunction makeScale(domains, range, axisType, isNice, tickCount) {\n    const domain = defaultDomain(_.flatten(domains), null, axisType);\n    const scale = initScale(axisType).domain(domain);\n    axisType === 'ordinal' ? scale.rangePoints(range) : scale.range(range);\n    if(isNice && axisType !== 'ordinal') scale.nice(tickCount);\n    return scale;\n}\n\nfunction defaultDomain(data, getter, scaleType) {\n    switch(scaleType) {\n        // extent for number & time scales, coerce dates to numbers\n        case 'number':\n        case 'time':\n            return d3.extent(data, (d) => +accessor(getter)(d));\n        // all unique values for ordinal scale\n        case 'ordinal': return _.uniq(data.map(accessor(getter)));\n    }\n    return [];\n}\n\nfunction initScale(type) {\n    switch(type) {\n        case 'number': return d3.scale.linear();\n        case 'ordinal': return d3.scale.ordinal();\n        case 'time': return d3.time.scale();\n    }\n}\n\nfunction formatAxisLabel(value, type, format, emptyLabel) {\n    return _.isNull(value) || _.isUndefined(value) ? emptyLabel\n        : _.isFunction(format) ? format(value)\n        : type === 'number' ? numeral(value).format(format)\n        : type === 'time' ? moment(value).format(format)\n        : value;\n}\n\nfunction measureAxisLabels(xProps, yProps, xAxisLabelProps, yAxisLabelProps) {\n    // hacky... pre-measure the bounding boxes of all axis labels,\n    // by rendering axis HTML to the DOM, measuring them with getBoundingClientRect, then deleting them.\n    xProps = _.assign({}, xProps, {showTicks: false, showGrid: false});\n    yProps = _.assign({}, yProps, {showTicks: false, showGrid: false});\n    const xAxisHtml = ReactDOMServer.renderToStaticMarkup(<ChartAxis {...xProps}/>);\n    const yAxisHtml = ReactDOMServer.renderToStaticMarkup(<ChartAxis {...yProps}/>);\n    const xLabelHtml = xAxisLabelProps ? ReactDOMServer.renderToStaticMarkup(<XAxisLabel {...xAxisLabelProps}/>) : '';\n    const yLabelHtml = yAxisLabelProps ? ReactDOMServer.renderToStaticMarkup(<YAxisLabel {...yAxisLabelProps}/>) : '';\n\n    let testSvg = document.createElement('div');\n    testSvg.innerHTML = `<svg class=\"xy-plot\"><g class=\"chart-inner\">\\\n        ${xAxisHtml}${yAxisHtml}${xLabelHtml}${yLabelHtml}\n    </g></svg>`;\n    document.body.appendChild(testSvg);\n\n    const getRect = (el => el.getBoundingClientRect()); // get rekt\n    const labelBoxes = {\n        xVal: xProps.showLabels ? _.map(testSvg.querySelectorAll('.chart-axis-value-label-x'), getRect) : [],\n        yVal: yProps.showLabels ? _.map(testSvg.querySelectorAll('.chart-axis-value-label-y'), getRect) : [],\n        xAxis: xAxisLabelProps ? testSvg.querySelectorAll('.chart-axis-label-x text')[0].getBoundingClientRect() : null,\n        yAxis: yAxisLabelProps ? testSvg.querySelectorAll('.chart-axis-label-y text')[0].getBoundingClientRect() : null\n    };\n    document.body.removeChild(testSvg);\n    //console.log(labelBoxes);\n\n    return labelBoxes;\n}\n\n// use resolveObjectProps HOC to resolve partially specified XY-type and direction-type object props\n// into their fully specified forms\n// todo: don't hardcode these - use tcomb?\nconst xyKeys = [\n    'axisType', 'domain', 'nice', 'invertAxis', 'tickCount', 'ticks', 'tickLength',\n    'labelValues', 'labelFormat', 'labelPadding', 'showLabels', 'showGrid', 'showTicks', 'showZero',\n    'axisLabel', 'axisLabelAlign', 'axisLabelPadding'\n];\nconst dirKeys = ['margin', 'padding', 'spacing'];\n\nconst XYPlotResolved = _.flow([\n  resolveXYScales,\n  _.partial(resolveObjectProps, _, xyKeys, ['x', 'y']),\n  _.partial(resolveObjectProps, _, dirKeys, ['top', 'bottom', 'left', 'right'])\n])(XYPlot);\n\nexport default XYPlotResolved;\n"]}